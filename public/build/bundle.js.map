{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/decimal.js/decimal.js","../../src/utils/path-utils.js","../../src/utils/exchange.js","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = append_empty_stylesheet(node).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true && boolean_attributes.has(name) ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.45.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n",";(function (globalScope) {\r\n  'use strict';\r\n\r\n\r\n  /*\r\n   *  decimal.js v10.3.1\r\n   *  An arbitrary-precision Decimal type for JavaScript.\r\n   *  https://github.com/MikeMcl/decimal.js\r\n   *  Copyright (c) 2021 Michael Mclaughlin <M8ch88l@gmail.com>\r\n   *  MIT Licence\r\n   */\r\n\r\n\r\n  // -----------------------------------  EDITABLE DEFAULTS  ------------------------------------ //\r\n\r\n\r\n    // The maximum exponent magnitude.\r\n    // The limit on the value of `toExpNeg`, `toExpPos`, `minE` and `maxE`.\r\n  var EXP_LIMIT = 9e15,                      // 0 to 9e15\r\n\r\n    // The limit on the value of `precision`, and on the value of the first argument to\r\n    // `toDecimalPlaces`, `toExponential`, `toFixed`, `toPrecision` and `toSignificantDigits`.\r\n    MAX_DIGITS = 1e9,                        // 0 to 1e9\r\n\r\n    // Base conversion alphabet.\r\n    NUMERALS = '0123456789abcdef',\r\n\r\n    // The natural logarithm of 10 (1025 digits).\r\n    LN10 = '2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058',\r\n\r\n    // Pi (1025 digits).\r\n    PI = '3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789',\r\n\r\n\r\n    // The initial configuration properties of the Decimal constructor.\r\n    DEFAULTS = {\r\n\r\n      // These values must be integers within the stated ranges (inclusive).\r\n      // Most of these values can be changed at run-time using the `Decimal.config` method.\r\n\r\n      // The maximum number of significant digits of the result of a calculation or base conversion.\r\n      // E.g. `Decimal.config({ precision: 20 });`\r\n      precision: 20,                         // 1 to MAX_DIGITS\r\n\r\n      // The rounding mode used when rounding to `precision`.\r\n      //\r\n      // ROUND_UP         0 Away from zero.\r\n      // ROUND_DOWN       1 Towards zero.\r\n      // ROUND_CEIL       2 Towards +Infinity.\r\n      // ROUND_FLOOR      3 Towards -Infinity.\r\n      // ROUND_HALF_UP    4 Towards nearest neighbour. If equidistant, up.\r\n      // ROUND_HALF_DOWN  5 Towards nearest neighbour. If equidistant, down.\r\n      // ROUND_HALF_EVEN  6 Towards nearest neighbour. If equidistant, towards even neighbour.\r\n      // ROUND_HALF_CEIL  7 Towards nearest neighbour. If equidistant, towards +Infinity.\r\n      // ROUND_HALF_FLOOR 8 Towards nearest neighbour. If equidistant, towards -Infinity.\r\n      //\r\n      // E.g.\r\n      // `Decimal.rounding = 4;`\r\n      // `Decimal.rounding = Decimal.ROUND_HALF_UP;`\r\n      rounding: 4,                           // 0 to 8\r\n\r\n      // The modulo mode used when calculating the modulus: a mod n.\r\n      // The quotient (q = a / n) is calculated according to the corresponding rounding mode.\r\n      // The remainder (r) is calculated as: r = a - n * q.\r\n      //\r\n      // UP         0 The remainder is positive if the dividend is negative, else is negative.\r\n      // DOWN       1 The remainder has the same sign as the dividend (JavaScript %).\r\n      // FLOOR      3 The remainder has the same sign as the divisor (Python %).\r\n      // HALF_EVEN  6 The IEEE 754 remainder function.\r\n      // EUCLID     9 Euclidian division. q = sign(n) * floor(a / abs(n)). Always positive.\r\n      //\r\n      // Truncated division (1), floored division (3), the IEEE 754 remainder (6), and Euclidian\r\n      // division (9) are commonly used for the modulus operation. The other rounding modes can also\r\n      // be used, but they may not give useful results.\r\n      modulo: 1,                             // 0 to 9\r\n\r\n      // The exponent value at and beneath which `toString` returns exponential notation.\r\n      // JavaScript numbers: -7\r\n      toExpNeg: -7,                          // 0 to -EXP_LIMIT\r\n\r\n      // The exponent value at and above which `toString` returns exponential notation.\r\n      // JavaScript numbers: 21\r\n      toExpPos:  21,                         // 0 to EXP_LIMIT\r\n\r\n      // The minimum exponent value, beneath which underflow to zero occurs.\r\n      // JavaScript numbers: -324  (5e-324)\r\n      minE: -EXP_LIMIT,                      // -1 to -EXP_LIMIT\r\n\r\n      // The maximum exponent value, above which overflow to Infinity occurs.\r\n      // JavaScript numbers: 308  (1.7976931348623157e+308)\r\n      maxE: EXP_LIMIT,                       // 1 to EXP_LIMIT\r\n\r\n      // Whether to use cryptographically-secure random number generation, if available.\r\n      crypto: false                          // true/false\r\n    },\r\n\r\n\r\n  // ----------------------------------- END OF EDITABLE DEFAULTS ------------------------------- //\r\n\r\n\r\n    Decimal, inexact, noConflict, quadrant,\r\n    external = true,\r\n\r\n    decimalError = '[DecimalError] ',\r\n    invalidArgument = decimalError + 'Invalid argument: ',\r\n    precisionLimitExceeded = decimalError + 'Precision limit exceeded',\r\n    cryptoUnavailable = decimalError + 'crypto unavailable',\r\n    tag = '[object Decimal]',\r\n\r\n    mathfloor = Math.floor,\r\n    mathpow = Math.pow,\r\n\r\n    isBinary = /^0b([01]+(\\.[01]*)?|\\.[01]+)(p[+-]?\\d+)?$/i,\r\n    isHex = /^0x([0-9a-f]+(\\.[0-9a-f]*)?|\\.[0-9a-f]+)(p[+-]?\\d+)?$/i,\r\n    isOctal = /^0o([0-7]+(\\.[0-7]*)?|\\.[0-7]+)(p[+-]?\\d+)?$/i,\r\n    isDecimal = /^(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i,\r\n\r\n    BASE = 1e7,\r\n    LOG_BASE = 7,\r\n    MAX_SAFE_INTEGER = 9007199254740991,\r\n\r\n    LN10_PRECISION = LN10.length - 1,\r\n    PI_PRECISION = PI.length - 1,\r\n\r\n    // Decimal.prototype object\r\n    P = { toStringTag: tag };\r\n\r\n\r\n  // Decimal prototype methods\r\n\r\n\r\n  /*\r\n   *  absoluteValue             abs\r\n   *  ceil\r\n   *  clampedTo                 clamp\r\n   *  comparedTo                cmp\r\n   *  cosine                    cos\r\n   *  cubeRoot                  cbrt\r\n   *  decimalPlaces             dp\r\n   *  dividedBy                 div\r\n   *  dividedToIntegerBy        divToInt\r\n   *  equals                    eq\r\n   *  floor\r\n   *  greaterThan               gt\r\n   *  greaterThanOrEqualTo      gte\r\n   *  hyperbolicCosine          cosh\r\n   *  hyperbolicSine            sinh\r\n   *  hyperbolicTangent         tanh\r\n   *  inverseCosine             acos\r\n   *  inverseHyperbolicCosine   acosh\r\n   *  inverseHyperbolicSine     asinh\r\n   *  inverseHyperbolicTangent  atanh\r\n   *  inverseSine               asin\r\n   *  inverseTangent            atan\r\n   *  isFinite\r\n   *  isInteger                 isInt\r\n   *  isNaN\r\n   *  isNegative                isNeg\r\n   *  isPositive                isPos\r\n   *  isZero\r\n   *  lessThan                  lt\r\n   *  lessThanOrEqualTo         lte\r\n   *  logarithm                 log\r\n   *  [maximum]                 [max]\r\n   *  [minimum]                 [min]\r\n   *  minus                     sub\r\n   *  modulo                    mod\r\n   *  naturalExponential        exp\r\n   *  naturalLogarithm          ln\r\n   *  negated                   neg\r\n   *  plus                      add\r\n   *  precision                 sd\r\n   *  round\r\n   *  sine                      sin\r\n   *  squareRoot                sqrt\r\n   *  tangent                   tan\r\n   *  times                     mul\r\n   *  toBinary\r\n   *  toDecimalPlaces           toDP\r\n   *  toExponential\r\n   *  toFixed\r\n   *  toFraction\r\n   *  toHexadecimal             toHex\r\n   *  toNearest\r\n   *  toNumber\r\n   *  toOctal\r\n   *  toPower                   pow\r\n   *  toPrecision\r\n   *  toSignificantDigits       toSD\r\n   *  toString\r\n   *  truncated                 trunc\r\n   *  valueOf                   toJSON\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of this Decimal.\r\n   *\r\n   */\r\n  P.absoluteValue = P.abs = function () {\r\n    var x = new this.constructor(this);\r\n    if (x.s < 0) x.s = 1;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of positive Infinity.\r\n   *\r\n   */\r\n  P.ceil = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal clamped to the range\r\n   * delineated by `min` and `max`.\r\n   *\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  P.clampedTo = P.clamp = function (min, max) {\r\n    var k,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n    min = new Ctor(min);\r\n    max = new Ctor(max);\r\n    if (!min.s || !max.s) return new Ctor(NaN);\r\n    if (min.gt(max)) throw Error(invalidArgument + max);\r\n    k = x.cmp(min);\r\n    return k < 0 ? min : x.cmp(max) > 0 ? max : new Ctor(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if the value of this Decimal is greater than the value of `y`,\r\n   *  -1    if the value of this Decimal is less than the value of `y`,\r\n   *   0    if they have the same value,\r\n   *   NaN  if the value of either Decimal is NaN.\r\n   *\r\n   */\r\n  P.comparedTo = P.cmp = function (y) {\r\n    var i, j, xdL, ydL,\r\n      x = this,\r\n      xd = x.d,\r\n      yd = (y = new x.constructor(y)).d,\r\n      xs = x.s,\r\n      ys = y.s;\r\n\r\n    // Either NaN or ±Infinity?\r\n    if (!xd || !yd) {\r\n      return !xs || !ys ? NaN : xs !== ys ? xs : xd === yd ? 0 : !xd ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Either zero?\r\n    if (!xd[0] || !yd[0]) return xd[0] ? xs : yd[0] ? -ys : 0;\r\n\r\n    // Signs differ?\r\n    if (xs !== ys) return xs;\r\n\r\n    // Compare exponents.\r\n    if (x.e !== y.e) return x.e > y.e ^ xs < 0 ? 1 : -1;\r\n\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Compare digit by digit.\r\n    for (i = 0, j = xdL < ydL ? xdL : ydL; i < j; ++i) {\r\n      if (xd[i] !== yd[i]) return xd[i] > yd[i] ^ xs < 0 ? 1 : -1;\r\n    }\r\n\r\n    // Compare lengths.\r\n    return xdL === ydL ? 0 : xdL > ydL ^ xs < 0 ? 1 : -1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * cos(0)         = 1\r\n   * cos(-0)        = 1\r\n   * cos(Infinity)  = NaN\r\n   * cos(-Infinity) = NaN\r\n   * cos(NaN)       = NaN\r\n   *\r\n   */\r\n  P.cosine = P.cos = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.d) return new Ctor(NaN);\r\n\r\n    // cos(0) = cos(-0) = 1\r\n    if (!x.d[0]) return new Ctor(1);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = cosine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 3 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *\r\n   * Return a new Decimal whose value is the cube root of the value of this Decimal, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   *  cbrt(0)  =  0\r\n   *  cbrt(-0) = -0\r\n   *  cbrt(1)  =  1\r\n   *  cbrt(-1) = -1\r\n   *  cbrt(N)  =  N\r\n   *  cbrt(-I) = -I\r\n   *  cbrt(I)  =  I\r\n   *\r\n   * Math.cbrt(x) = (x < 0 ? -Math.pow(-x, 1/3) : Math.pow(x, 1/3))\r\n   *\r\n   */\r\n  P.cubeRoot = P.cbrt = function () {\r\n    var e, m, n, r, rep, s, sd, t, t3, t3plusx,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = x.s * mathpow(x.s * x, 1 / 3);\r\n\r\n     // Math.cbrt underflow/overflow?\r\n     // Pass x to Math.pow as integer, then adjust the exponent of the result.\r\n    if (!s || Math.abs(s) == 1 / 0) {\r\n      n = digitsToString(x.d);\r\n      e = x.e;\r\n\r\n      // Adjust n exponent so it is a multiple of 3 away from x exponent.\r\n      if (s = (e - n.length + 1) % 3) n += (s == 1 || s == -2 ? '0' : '00');\r\n      s = mathpow(n, 1 / 3);\r\n\r\n      // Rarely, e may be one less than the result exponent value.\r\n      e = mathfloor((e + 1) / 3) - (e % 3 == (e < 0 ? -1 : 2));\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n      r.s = x.s;\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Halley's method.\r\n    // TODO? Compare Newton's method.\r\n    for (;;) {\r\n      t = r;\r\n      t3 = t.times(t).times(t);\r\n      t3plusx = t3.plus(x);\r\n      r = divide(t3plusx.plus(x).times(t), t3plusx.plus(t3), sd + 2, 1);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or 4999\r\n        // , i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of decimal places of the value of this Decimal.\r\n   *\r\n   */\r\n  P.decimalPlaces = P.dp = function () {\r\n    var w,\r\n      d = this.d,\r\n      n = NaN;\r\n\r\n    if (d) {\r\n      w = d.length - 1;\r\n      n = (w - mathfloor(this.e / LOG_BASE)) * LOG_BASE;\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      w = d[w];\r\n      if (w) for (; w % 10 == 0; w /= 10) n--;\r\n      if (n < 0) n = 0;\r\n    }\r\n\r\n    return n;\r\n  };\r\n\r\n\r\n  /*\r\n   *  n / 0 = I\r\n   *  n / N = N\r\n   *  n / I = 0\r\n   *  0 / n = 0\r\n   *  0 / 0 = N\r\n   *  0 / N = N\r\n   *  0 / I = 0\r\n   *  N / n = N\r\n   *  N / 0 = N\r\n   *  N / N = N\r\n   *  N / I = N\r\n   *  I / n = I\r\n   *  I / 0 = I\r\n   *  I / N = N\r\n   *  I / I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal divided by `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedBy = P.div = function (y) {\r\n    return divide(this, new this.constructor(y));\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the integer part of dividing the value of this Decimal\r\n   * by the value of `y`, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.dividedToIntegerBy = P.divToInt = function (y) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n    return finalise(divide(x, new Ctor(y), 0, 1, 1), Ctor.precision, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is equal to the value of `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.equals = P.eq = function (y) {\r\n    return this.cmp(y) === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number in the\r\n   * direction of negative Infinity.\r\n   *\r\n   */\r\n  P.floor = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 3);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than the value of `y`, otherwise return\r\n   * false.\r\n   *\r\n   */\r\n  P.greaterThan = P.gt = function (y) {\r\n    return this.cmp(y) > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is greater than or equal to the value of `y`,\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  P.greaterThanOrEqualTo = P.gte = function (y) {\r\n    var k = this.cmp(y);\r\n    return k == 1 || k === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [1, Infinity]\r\n   *\r\n   * cosh(x) = 1 + x^2/2! + x^4/4! + x^6/6! + ...\r\n   *\r\n   * cosh(0)         = 1\r\n   * cosh(-0)        = 1\r\n   * cosh(Infinity)  = Infinity\r\n   * cosh(-Infinity) = Infinity\r\n   * cosh(NaN)       = NaN\r\n   *\r\n   *  x        time taken (ms)   result\r\n   * 1000      9                 9.8503555700852349694e+433\r\n   * 10000     25                4.4034091128314607936e+4342\r\n   * 100000    171               1.4033316802130615897e+43429\r\n   * 1000000   3817              1.5166076984010437725e+434294\r\n   * 10000000  abandoned after 2 minute wait\r\n   *\r\n   * TODO? Compare performance of cosh(x) = 0.5 * (exp(x) + exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicCosine = P.cosh = function () {\r\n    var k, n, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      one = new Ctor(1);\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s ? 1 / 0 : NaN);\r\n    if (x.isZero()) return one;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    // Argument reduction: cos(4x) = 1 - 8cos^2(x) + 8cos^4(x) + 1\r\n    // i.e. cos(x) = 1 - cos^2(x/4)(8 - 8cos^2(x/4))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    // TODO? Estimation reused from cosine() and may not be optimal here.\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      n = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      n = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(n), new Ctor(1), true);\r\n\r\n    // Reverse argument reduction\r\n    var cosh2_x,\r\n      i = k,\r\n      d8 = new Ctor(8);\r\n    for (; i--;) {\r\n      cosh2_x = x.times(x);\r\n      x = one.minus(cosh2_x.times(d8.minus(cosh2_x.times(d8))));\r\n    }\r\n\r\n    return finalise(x, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * sinh(x) = x + x^3/3! + x^5/5! + x^7/7! + ...\r\n   *\r\n   * sinh(0)         = 0\r\n   * sinh(-0)        = -0\r\n   * sinh(Infinity)  = Infinity\r\n   * sinh(-Infinity) = -Infinity\r\n   * sinh(NaN)       = NaN\r\n   *\r\n   * x        time taken (ms)\r\n   * 10       2 ms\r\n   * 100      5 ms\r\n   * 1000     14 ms\r\n   * 10000    82 ms\r\n   * 100000   886 ms            1.4033316802130615897e+43429\r\n   * 200000   2613 ms\r\n   * 300000   5407 ms\r\n   * 400000   8824 ms\r\n   * 500000   13026 ms          8.7080643612718084129e+217146\r\n   * 1000000  48543 ms\r\n   *\r\n   * TODO? Compare performance of sinh(x) = 0.5 * (exp(x) - exp(-x))\r\n   *\r\n   */\r\n  P.hyperbolicSine = P.sinh = function () {\r\n    var k, pr, rm, len,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n    } else {\r\n\r\n      // Alternative argument reduction: sinh(3x) = sinh(x)(3 + 4sinh^2(x))\r\n      // i.e. sinh(x) = sinh(x/3)(3 + 4sinh^2(x/3))\r\n      // 3 multiplications and 1 addition\r\n\r\n      // Argument reduction: sinh(5x) = sinh(x)(5 + sinh^2(x)(20 + 16sinh^2(x)))\r\n      // i.e. sinh(x) = sinh(x/5)(5 + sinh^2(x/5)(20 + 16sinh^2(x/5)))\r\n      // 4 multiplications and 2 additions\r\n\r\n      // Estimate the optimum number of times to use the argument reduction.\r\n      k = 1.4 * Math.sqrt(len);\r\n      k = k > 16 ? 16 : k | 0;\r\n\r\n      x = x.times(1 / tinyPow(5, k));\r\n      x = taylorSeries(Ctor, 2, x, x, true);\r\n\r\n      // Reverse argument reduction\r\n      var sinh2_x,\r\n        d5 = new Ctor(5),\r\n        d16 = new Ctor(16),\r\n        d20 = new Ctor(20);\r\n      for (; k--;) {\r\n        sinh2_x = x.times(x);\r\n        x = x.times(d5.plus(sinh2_x.times(d16.times(sinh2_x).plus(d20))));\r\n      }\r\n    }\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of the value in radians of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * tanh(x) = sinh(x) / cosh(x)\r\n   *\r\n   * tanh(0)         = 0\r\n   * tanh(-0)        = -0\r\n   * tanh(Infinity)  = 1\r\n   * tanh(-Infinity) = -1\r\n   * tanh(NaN)       = NaN\r\n   *\r\n   */\r\n  P.hyperbolicTangent = P.tanh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(x.s);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 7;\r\n    Ctor.rounding = 1;\r\n\r\n    return divide(x.sinh(), x.cosh(), Ctor.precision = pr, Ctor.rounding = rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine (inverse cosine) in radians of the value of\r\n   * this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [0, pi]\r\n   *\r\n   * acos(x) = pi/2 - asin(x)\r\n   *\r\n   * acos(0)       = pi/2\r\n   * acos(-0)      = pi/2\r\n   * acos(1)       = 0\r\n   * acos(-1)      = pi\r\n   * acos(1/2)     = pi/3\r\n   * acos(-1/2)    = 2*pi/3\r\n   * acos(|x| > 1) = NaN\r\n   * acos(NaN)     = NaN\r\n   *\r\n   */\r\n  P.inverseCosine = P.acos = function () {\r\n    var halfPi,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      k = x.abs().cmp(1),\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n      return k === 0\r\n        // |x| is 1\r\n        ? x.isNeg() ? getPi(Ctor, pr, rm) : new Ctor(0)\r\n        // |x| > 1 or x is NaN\r\n        : new Ctor(NaN);\r\n    }\r\n\r\n    if (x.isZero()) return getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    // TODO? Special case acos(0.5) = pi/3 and acos(-0.5) = 2*pi/3\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.asin();\r\n    halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return halfPi.minus(x);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [1, Infinity]\r\n   * Range: [0, Infinity]\r\n   *\r\n   * acosh(x) = ln(x + sqrt(x^2 - 1))\r\n   *\r\n   * acosh(x < 1)     = NaN\r\n   * acosh(NaN)       = NaN\r\n   * acosh(Infinity)  = Infinity\r\n   * acosh(-Infinity) = NaN\r\n   * acosh(0)         = NaN\r\n   * acosh(-0)        = NaN\r\n   * acosh(1)         = 0\r\n   * acosh(-1)        = NaN\r\n   *\r\n   */\r\n  P.inverseHyperbolicCosine = P.acosh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.lte(1)) return new Ctor(x.eq(1) ? 0 : NaN);\r\n    if (!x.isFinite()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(Math.abs(x.e), x.sd()) + 4;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).minus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * asinh(x) = ln(x + sqrt(x^2 + 1))\r\n   *\r\n   * asinh(NaN)       = NaN\r\n   * asinh(Infinity)  = Infinity\r\n   * asinh(-Infinity) = -Infinity\r\n   * asinh(0)         = 0\r\n   * asinh(-0)        = -0\r\n   *\r\n   */\r\n  P.inverseHyperbolicSine = P.asinh = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite() || x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 2 * Math.max(Math.abs(x.e), x.sd()) + 6;\r\n    Ctor.rounding = 1;\r\n    external = false;\r\n\r\n    x = x.times(x).plus(1).sqrt().plus(x);\r\n\r\n    external = true;\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.ln();\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent in radians of the\r\n   * value of this Decimal.\r\n   *\r\n   * Domain: [-1, 1]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * atanh(x) = 0.5 * ln((1 + x) / (1 - x))\r\n   *\r\n   * atanh(|x| > 1)   = NaN\r\n   * atanh(NaN)       = NaN\r\n   * atanh(Infinity)  = NaN\r\n   * atanh(-Infinity) = NaN\r\n   * atanh(0)         = 0\r\n   * atanh(-0)        = -0\r\n   * atanh(1)         = Infinity\r\n   * atanh(-1)        = -Infinity\r\n   *\r\n   */\r\n  P.inverseHyperbolicTangent = P.atanh = function () {\r\n    var pr, rm, wpr, xsd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.e >= 0) return new Ctor(x.abs().eq(1) ? x.s / 0 : x.isZero() ? x : NaN);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    xsd = x.sd();\r\n\r\n    if (Math.max(xsd, pr) < 2 * -x.e - 1) return finalise(new Ctor(x), pr, rm, true);\r\n\r\n    Ctor.precision = wpr = xsd - x.e;\r\n\r\n    x = divide(x.plus(1), new Ctor(1).minus(x), wpr + pr, 1);\r\n\r\n    Ctor.precision = pr + 4;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.ln();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(0.5);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine (inverse sine) in radians of the value of this\r\n   * Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * asin(x) = 2*atan(x/(1 + sqrt(1 - x^2)))\r\n   *\r\n   * asin(0)       = 0\r\n   * asin(-0)      = -0\r\n   * asin(1/2)     = pi/6\r\n   * asin(-1/2)    = -pi/6\r\n   * asin(1)       = pi/2\r\n   * asin(-1)      = -pi/2\r\n   * asin(|x| > 1) = NaN\r\n   * asin(NaN)     = NaN\r\n   *\r\n   * TODO? Compare performance of Taylor series.\r\n   *\r\n   */\r\n  P.inverseSine = P.asin = function () {\r\n    var halfPi, k,\r\n      pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    k = x.abs().cmp(1);\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (k !== -1) {\r\n\r\n      // |x| is 1\r\n      if (k === 0) {\r\n        halfPi = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        halfPi.s = x.s;\r\n        return halfPi;\r\n      }\r\n\r\n      // |x| > 1 or x is NaN\r\n      return new Ctor(NaN);\r\n    }\r\n\r\n    // TODO? Special case asin(1/2) = pi/6 and asin(-1/2) = -pi/6\r\n\r\n    Ctor.precision = pr + 6;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.div(new Ctor(1).minus(x.times(x)).sqrt().plus(1)).atan();\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return x.times(2);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent (inverse tangent) in radians of the value\r\n   * of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi/2, pi/2]\r\n   *\r\n   * atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n   *\r\n   * atan(0)         = 0\r\n   * atan(-0)        = -0\r\n   * atan(1)         = pi/4\r\n   * atan(-1)        = -pi/4\r\n   * atan(Infinity)  = pi/2\r\n   * atan(-Infinity) = -pi/2\r\n   * atan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.inverseTangent = P.atan = function () {\r\n    var i, j, k, n, px, t, r, wpr, x2,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding;\r\n\r\n    if (!x.isFinite()) {\r\n      if (!x.s) return new Ctor(NaN);\r\n      if (pr + 4 <= PI_PRECISION) {\r\n        r = getPi(Ctor, pr + 4, rm).times(0.5);\r\n        r.s = x.s;\r\n        return r;\r\n      }\r\n    } else if (x.isZero()) {\r\n      return new Ctor(x);\r\n    } else if (x.abs().eq(1) && pr + 4 <= PI_PRECISION) {\r\n      r = getPi(Ctor, pr + 4, rm).times(0.25);\r\n      r.s = x.s;\r\n      return r;\r\n    }\r\n\r\n    Ctor.precision = wpr = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    // TODO? if (x >= 1 && pr <= PI_PRECISION) atan(x) = halfPi * x.s - atan(1 / x);\r\n\r\n    // Argument reduction\r\n    // Ensure |x| < 0.42\r\n    // atan(x) = 2 * atan(x / (1 + sqrt(1 + x^2)))\r\n\r\n    k = Math.min(28, wpr / LOG_BASE + 2 | 0);\r\n\r\n    for (i = k; i; --i) x = x.div(x.times(x).plus(1).sqrt().plus(1));\r\n\r\n    external = false;\r\n\r\n    j = Math.ceil(wpr / LOG_BASE);\r\n    n = 1;\r\n    x2 = x.times(x);\r\n    r = new Ctor(x);\r\n    px = x;\r\n\r\n    // atan(x) = x - x^3/3 + x^5/5 - x^7/7 + ...\r\n    for (; i !== -1;) {\r\n      px = px.times(x2);\r\n      t = r.minus(px.div(n += 2));\r\n\r\n      px = px.times(x2);\r\n      r = t.plus(px.div(n += 2));\r\n\r\n      if (r.d[j] !== void 0) for (i = j; r.d[i] === t.d[i] && i--;);\r\n    }\r\n\r\n    if (k) r = r.times(2 << (k - 1));\r\n\r\n    external = true;\r\n\r\n    return finalise(r, Ctor.precision = pr, Ctor.rounding = rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is a finite number, otherwise return false.\r\n   *\r\n   */\r\n  P.isFinite = function () {\r\n    return !!this.d;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is an integer, otherwise return false.\r\n   *\r\n   */\r\n  P.isInteger = P.isInt = function () {\r\n    return !!this.d && mathfloor(this.e / LOG_BASE) > this.d.length - 2;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is NaN, otherwise return false.\r\n   *\r\n   */\r\n  P.isNaN = function () {\r\n    return !this.s;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is negative, otherwise return false.\r\n   *\r\n   */\r\n  P.isNegative = P.isNeg = function () {\r\n    return this.s < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is positive, otherwise return false.\r\n   *\r\n   */\r\n  P.isPositive = P.isPos = function () {\r\n    return this.s > 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is 0 or -0, otherwise return false.\r\n   *\r\n   */\r\n  P.isZero = function () {\r\n    return !!this.d && this.d[0] === 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThan = P.lt = function (y) {\r\n    return this.cmp(y) < 0;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return true if the value of this Decimal is less than or equal to `y`, otherwise return false.\r\n   *\r\n   */\r\n  P.lessThanOrEqualTo = P.lte = function (y) {\r\n    return this.cmp(y) < 1;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the logarithm of the value of this Decimal to the specified base, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * If no base is specified, return log[10](arg).\r\n   *\r\n   * log[base](arg) = ln(arg) / ln(base)\r\n   *\r\n   * The result will always be correctly rounded if the base of the log is 10, and 'almost always'\r\n   * otherwise:\r\n   *\r\n   * Depending on the rounding mode, the result may be incorrectly rounded if the first fifteen\r\n   * rounding digits are [49]99999999999999 or [50]00000000000000. In that case, the maximum error\r\n   * between the result and the correctly rounded result will be one ulp (unit in the last place).\r\n   *\r\n   * log[-b](a)       = NaN\r\n   * log[0](a)        = NaN\r\n   * log[1](a)        = NaN\r\n   * log[NaN](a)      = NaN\r\n   * log[Infinity](a) = NaN\r\n   * log[b](0)        = -Infinity\r\n   * log[b](-0)       = -Infinity\r\n   * log[b](-a)       = NaN\r\n   * log[b](1)        = 0\r\n   * log[b](Infinity) = Infinity\r\n   * log[b](NaN)      = NaN\r\n   *\r\n   * [base] {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  P.logarithm = P.log = function (base) {\r\n    var isBase10, d, denominator, k, inf, num, sd, r,\r\n      arg = this,\r\n      Ctor = arg.constructor,\r\n      pr = Ctor.precision,\r\n      rm = Ctor.rounding,\r\n      guard = 5;\r\n\r\n    // Default base is 10.\r\n    if (base == null) {\r\n      base = new Ctor(10);\r\n      isBase10 = true;\r\n    } else {\r\n      base = new Ctor(base);\r\n      d = base.d;\r\n\r\n      // Return NaN if base is negative, or non-finite, or is 0 or 1.\r\n      if (base.s < 0 || !d || !d[0] || base.eq(1)) return new Ctor(NaN);\r\n\r\n      isBase10 = base.eq(10);\r\n    }\r\n\r\n    d = arg.d;\r\n\r\n    // Is arg negative, non-finite, 0 or 1?\r\n    if (arg.s < 0 || !d || !d[0] || arg.eq(1)) {\r\n      return new Ctor(d && !d[0] ? -1 / 0 : arg.s != 1 ? NaN : d ? 0 : 1 / 0);\r\n    }\r\n\r\n    // The result will have a non-terminating decimal expansion if base is 10 and arg is not an\r\n    // integer power of 10.\r\n    if (isBase10) {\r\n      if (d.length > 1) {\r\n        inf = true;\r\n      } else {\r\n        for (k = d[0]; k % 10 === 0;) k /= 10;\r\n        inf = k !== 1;\r\n      }\r\n    }\r\n\r\n    external = false;\r\n    sd = pr + guard;\r\n    num = naturalLogarithm(arg, sd);\r\n    denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n\r\n    // The result will have 5 rounding digits.\r\n    r = divide(num, denominator, sd, 1);\r\n\r\n    // If at a rounding boundary, i.e. the result's rounding digits are [49]9999 or [50]0000,\r\n    // calculate 10 further digits.\r\n    //\r\n    // If the result is known to have an infinite decimal expansion, repeat this until it is clear\r\n    // that the result is above or below the boundary. Otherwise, if after calculating the 10\r\n    // further digits, the last 14 are nines, round up and assume the result is exact.\r\n    // Also assume the result is exact if the last 14 are zero.\r\n    //\r\n    // Example of a result that will be incorrectly rounded:\r\n    // log[1048576](4503599627370502) = 2.60000000000000009610279511444746...\r\n    // The above result correctly rounded using ROUND_CEIL to 1 decimal place should be 2.7, but it\r\n    // will be given as 2.6 as there are 15 zeros immediately after the requested decimal place, so\r\n    // the exact result would be assumed to be 2.6, which rounded using ROUND_CEIL to 1 decimal\r\n    // place is still 2.6.\r\n    if (checkRoundingDigits(r.d, k = pr, rm)) {\r\n\r\n      do {\r\n        sd += 10;\r\n        num = naturalLogarithm(arg, sd);\r\n        denominator = isBase10 ? getLn10(Ctor, sd + 10) : naturalLogarithm(base, sd);\r\n        r = divide(num, denominator, sd, 1);\r\n\r\n        if (!inf) {\r\n\r\n          // Check for 14 nines from the 2nd rounding digit, as the first may be 4.\r\n          if (+digitsToString(r.d).slice(k + 1, k + 15) + 1 == 1e14) {\r\n            r = finalise(r, pr + 1, 0);\r\n          }\r\n\r\n          break;\r\n        }\r\n      } while (checkRoundingDigits(r.d, k += 10, rm));\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.max = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'lt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments and the value of this Decimal.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n  P.min = function () {\r\n    Array.prototype.push.call(arguments, this);\r\n    return maxOrMin(this.constructor, arguments, 'gt');\r\n  };\r\n   */\r\n\r\n\r\n  /*\r\n   *  n - 0 = n\r\n   *  n - N = N\r\n   *  n - I = -I\r\n   *  0 - n = -n\r\n   *  0 - 0 = 0\r\n   *  0 - N = N\r\n   *  0 - I = -I\r\n   *  N - n = N\r\n   *  N - 0 = N\r\n   *  N - N = N\r\n   *  N - I = N\r\n   *  I - n = I\r\n   *  I - 0 = I\r\n   *  I - N = N\r\n   *  I - I = N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal minus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.minus = P.sub = function (y) {\r\n    var d, e, i, j, k, len, pr, rm, xd, xe, xLTy, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return y negated if x is finite and y is ±Infinity.\r\n      else if (x.d) y.s = -y.s;\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with different signs.\r\n      // Return NaN if both are ±Infinity with the same sign.\r\n      else y = new Ctor(y.d || x.s !== y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n    // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.plus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return y negated if x is zero and y is non-zero.\r\n      if (yd[0]) y.s = -y.s;\r\n\r\n      // Return x if y is zero and x is non-zero.\r\n      else if (xd[0]) y = new Ctor(x);\r\n\r\n      // Return zero if both are zero.\r\n      // From IEEE 754 (2008) 6.3: 0 - 0 = -0 - -0 = -0 when rounding to -Infinity.\r\n      else return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    e = mathfloor(y.e / LOG_BASE);\r\n    xe = mathfloor(x.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    k = xe - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (k) {\r\n      xLTy = k < 0;\r\n\r\n      if (xLTy) {\r\n        d = xd;\r\n        k = -k;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = xe;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Numbers with massively different exponents would result in a very high number of\r\n      // zeros needing to be prepended, but this can be avoided while still ensuring correct\r\n      // rounding by limiting the number of zeros to `Math.ceil(pr / LOG_BASE) + 2`.\r\n      i = Math.max(Math.ceil(pr / LOG_BASE), len) + 2;\r\n\r\n      if (k > i) {\r\n        k = i;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents.\r\n      d.reverse();\r\n      for (i = k; i--;) d.push(0);\r\n      d.reverse();\r\n\r\n    // Base 1e7 exponents equal.\r\n    } else {\r\n\r\n      // Check digits to determine which is the bigger number.\r\n\r\n      i = xd.length;\r\n      len = yd.length;\r\n      xLTy = i < len;\r\n      if (xLTy) len = i;\r\n\r\n      for (i = 0; i < len; i++) {\r\n        if (xd[i] != yd[i]) {\r\n          xLTy = xd[i] < yd[i];\r\n          break;\r\n        }\r\n      }\r\n\r\n      k = 0;\r\n    }\r\n\r\n    if (xLTy) {\r\n      d = xd;\r\n      xd = yd;\r\n      yd = d;\r\n      y.s = -y.s;\r\n    }\r\n\r\n    len = xd.length;\r\n\r\n    // Append zeros to `xd` if shorter.\r\n    // Don't add zeros to `yd` if shorter as subtraction only needs to start at `yd` length.\r\n    for (i = yd.length - len; i > 0; --i) xd[len++] = 0;\r\n\r\n    // Subtract yd from xd.\r\n    for (i = yd.length; i > k;) {\r\n\r\n      if (xd[--i] < yd[i]) {\r\n        for (j = i; j && xd[--j] === 0;) xd[j] = BASE - 1;\r\n        --xd[j];\r\n        xd[i] += BASE;\r\n      }\r\n\r\n      xd[i] -= yd[i];\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; xd[--len] === 0;) xd.pop();\r\n\r\n    // Remove leading zeros and adjust exponent accordingly.\r\n    for (; xd[0] === 0; xd.shift()) --e;\r\n\r\n    // Zero?\r\n    if (!xd[0]) return new Ctor(rm === 3 ? -0 : 0);\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   *   n % 0 =  N\r\n   *   n % N =  N\r\n   *   n % I =  n\r\n   *   0 % n =  0\r\n   *  -0 % n = -0\r\n   *   0 % 0 =  N\r\n   *   0 % N =  N\r\n   *   0 % I =  0\r\n   *   N % n =  N\r\n   *   N % 0 =  N\r\n   *   N % N =  N\r\n   *   N % I =  N\r\n   *   I % n =  N\r\n   *   I % 0 =  N\r\n   *   I % N =  N\r\n   *   I % I =  N\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal modulo `y`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * The result depends on the modulo mode.\r\n   *\r\n   */\r\n  P.modulo = P.mod = function (y) {\r\n    var q,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // Return NaN if x is ±Infinity or NaN, or y is NaN or ±0.\r\n    if (!x.d || !y.s || y.d && !y.d[0]) return new Ctor(NaN);\r\n\r\n    // Return x if y is ±Infinity or x is ±0.\r\n    if (!y.d || x.d && !x.d[0]) {\r\n      return finalise(new Ctor(x), Ctor.precision, Ctor.rounding);\r\n    }\r\n\r\n    // Prevent rounding of intermediate calculations.\r\n    external = false;\r\n\r\n    if (Ctor.modulo == 9) {\r\n\r\n      // Euclidian division: q = sign(y) * floor(x / abs(y))\r\n      // result = x - q * y    where  0 <= result < abs(y)\r\n      q = divide(x, y.abs(), 0, 3, 1);\r\n      q.s *= y.s;\r\n    } else {\r\n      q = divide(x, y, 0, Ctor.modulo, 1);\r\n    }\r\n\r\n    q = q.times(y);\r\n\r\n    external = true;\r\n\r\n    return x.minus(q);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of the value of this Decimal,\r\n   * i.e. the base e raised to the power the value of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalExponential = P.exp = function () {\r\n    return naturalExponential(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of the value of this Decimal,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.naturalLogarithm = P.ln = function () {\r\n    return naturalLogarithm(this);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal negated, i.e. as if multiplied by\r\n   * -1.\r\n   *\r\n   */\r\n  P.negated = P.neg = function () {\r\n    var x = new this.constructor(this);\r\n    x.s = -x.s;\r\n    return finalise(x);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n + 0 = n\r\n   *  n + N = N\r\n   *  n + I = I\r\n   *  0 + n = n\r\n   *  0 + 0 = 0\r\n   *  0 + N = N\r\n   *  0 + I = I\r\n   *  N + n = N\r\n   *  N + 0 = N\r\n   *  N + N = N\r\n   *  N + I = N\r\n   *  I + n = I\r\n   *  I + 0 = I\r\n   *  I + N = N\r\n   *  I + I = I\r\n   *\r\n   * Return a new Decimal whose value is the value of this Decimal plus `y`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.plus = P.add = function (y) {\r\n    var carry, d, e, i, k, len, pr, rm, xd, yd,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    y = new Ctor(y);\r\n\r\n    // If either is not finite...\r\n    if (!x.d || !y.d) {\r\n\r\n      // Return NaN if either is NaN.\r\n      if (!x.s || !y.s) y = new Ctor(NaN);\r\n\r\n      // Return x if y is finite and x is ±Infinity.\r\n      // Return x if both are ±Infinity with the same sign.\r\n      // Return NaN if both are ±Infinity with different signs.\r\n      // Return y if x is finite and y is ±Infinity.\r\n      else if (!x.d) y = new Ctor(y.d || x.s === y.s ? x : NaN);\r\n\r\n      return y;\r\n    }\r\n\r\n     // If signs differ...\r\n    if (x.s != y.s) {\r\n      y.s = -y.s;\r\n      return x.minus(y);\r\n    }\r\n\r\n    xd = x.d;\r\n    yd = y.d;\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    // If either is zero...\r\n    if (!xd[0] || !yd[0]) {\r\n\r\n      // Return x if y is zero.\r\n      // Return y if y is non-zero.\r\n      if (!yd[0]) y = new Ctor(x);\r\n\r\n      return external ? finalise(y, pr, rm) : y;\r\n    }\r\n\r\n    // x and y are finite, non-zero numbers with the same sign.\r\n\r\n    // Calculate base 1e7 exponents.\r\n    k = mathfloor(x.e / LOG_BASE);\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    xd = xd.slice();\r\n    i = k - e;\r\n\r\n    // If base 1e7 exponents differ...\r\n    if (i) {\r\n\r\n      if (i < 0) {\r\n        d = xd;\r\n        i = -i;\r\n        len = yd.length;\r\n      } else {\r\n        d = yd;\r\n        e = k;\r\n        len = xd.length;\r\n      }\r\n\r\n      // Limit number of zeros prepended to max(ceil(pr / LOG_BASE), len) + 1.\r\n      k = Math.ceil(pr / LOG_BASE);\r\n      len = k > len ? k + 1 : len + 1;\r\n\r\n      if (i > len) {\r\n        i = len;\r\n        d.length = 1;\r\n      }\r\n\r\n      // Prepend zeros to equalise exponents. Note: Faster to use reverse then do unshifts.\r\n      d.reverse();\r\n      for (; i--;) d.push(0);\r\n      d.reverse();\r\n    }\r\n\r\n    len = xd.length;\r\n    i = yd.length;\r\n\r\n    // If yd is longer than xd, swap xd and yd so xd points to the longer array.\r\n    if (len - i < 0) {\r\n      i = len;\r\n      d = yd;\r\n      yd = xd;\r\n      xd = d;\r\n    }\r\n\r\n    // Only start adding at yd.length - 1 as the further digits of xd can be left as they are.\r\n    for (carry = 0; i;) {\r\n      carry = (xd[--i] = xd[i] + yd[i] + carry) / BASE | 0;\r\n      xd[i] %= BASE;\r\n    }\r\n\r\n    if (carry) {\r\n      xd.unshift(carry);\r\n      ++e;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    // No need to check for zero, as +x + +y != 0 && -x + -y != 0\r\n    for (len = xd.length; xd[--len] == 0;) xd.pop();\r\n\r\n    y.d = xd;\r\n    y.e = getBase10Exponent(xd, e);\r\n\r\n    return external ? finalise(y, pr, rm) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the number of significant digits of the value of this Decimal.\r\n   *\r\n   * [z] {boolean|number} Whether to count integer-part trailing zeros: true, false, 1 or 0.\r\n   *\r\n   */\r\n  P.precision = P.sd = function (z) {\r\n    var k,\r\n      x = this;\r\n\r\n    if (z !== void 0 && z !== !!z && z !== 1 && z !== 0) throw Error(invalidArgument + z);\r\n\r\n    if (x.d) {\r\n      k = getPrecision(x.d);\r\n      if (z && x.e + 1 > k) k = x.e + 1;\r\n    } else {\r\n      k = NaN;\r\n    }\r\n\r\n    return k;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a whole number using\r\n   * rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.round = function () {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    return finalise(new Ctor(x), x.e + 1, Ctor.rounding);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-1, 1]\r\n   *\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   *\r\n   * sin(0)         = 0\r\n   * sin(-0)        = -0\r\n   * sin(Infinity)  = NaN\r\n   * sin(-Infinity) = NaN\r\n   * sin(NaN)       = NaN\r\n   *\r\n   */\r\n  P.sine = P.sin = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + Math.max(x.e, x.sd()) + LOG_BASE;\r\n    Ctor.rounding = 1;\r\n\r\n    x = sine(Ctor, toLessThanHalfPi(Ctor, x));\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant > 2 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of this Decimal, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   *  sqrt(-n) =  N\r\n   *  sqrt(N)  =  N\r\n   *  sqrt(-I) =  N\r\n   *  sqrt(I)  =  I\r\n   *  sqrt(0)  =  0\r\n   *  sqrt(-0) = -0\r\n   *\r\n   */\r\n  P.squareRoot = P.sqrt = function () {\r\n    var m, n, sd, r, rep, t,\r\n      x = this,\r\n      d = x.d,\r\n      e = x.e,\r\n      s = x.s,\r\n      Ctor = x.constructor;\r\n\r\n    // Negative/NaN/Infinity/zero?\r\n    if (s !== 1 || !d || !d[0]) {\r\n      return new Ctor(!s || s < 0 && (!d || d[0]) ? NaN : d ? x : 1 / 0);\r\n    }\r\n\r\n    external = false;\r\n\r\n    // Initial estimate.\r\n    s = Math.sqrt(+x);\r\n\r\n    // Math.sqrt underflow/overflow?\r\n    // Pass x to Math.sqrt as integer, then adjust the exponent of the result.\r\n    if (s == 0 || s == 1 / 0) {\r\n      n = digitsToString(d);\r\n\r\n      if ((n.length + e) % 2 == 0) n += '0';\r\n      s = Math.sqrt(n);\r\n      e = mathfloor((e + 1) / 2) - (e < 0 || e % 2);\r\n\r\n      if (s == 1 / 0) {\r\n        n = '5e' + e;\r\n      } else {\r\n        n = s.toExponential();\r\n        n = n.slice(0, n.indexOf('e') + 1) + e;\r\n      }\r\n\r\n      r = new Ctor(n);\r\n    } else {\r\n      r = new Ctor(s.toString());\r\n    }\r\n\r\n    sd = (e = Ctor.precision) + 3;\r\n\r\n    // Newton-Raphson iteration.\r\n    for (;;) {\r\n      t = r;\r\n      r = t.plus(divide(x, t, sd + 2, 1)).times(0.5);\r\n\r\n      // TODO? Replace with for-loop and checkRoundingDigits.\r\n      if (digitsToString(t.d).slice(0, sd) === (n = digitsToString(r.d)).slice(0, sd)) {\r\n        n = n.slice(sd - 3, sd + 1);\r\n\r\n        // The 4th rounding digit may be in error by -1 so if the 4 rounding digits are 9999 or\r\n        // 4999, i.e. approaching a rounding boundary, continue the iteration.\r\n        if (n == '9999' || !rep && n == '4999') {\r\n\r\n          // On the first iteration only, check to see if rounding up gives the exact result as the\r\n          // nines may infinitely repeat.\r\n          if (!rep) {\r\n            finalise(t, e + 1, 0);\r\n\r\n            if (t.times(t).eq(x)) {\r\n              r = t;\r\n              break;\r\n            }\r\n          }\r\n\r\n          sd += 4;\r\n          rep = 1;\r\n        } else {\r\n\r\n          // If the rounding digits are null, 0{0,4} or 50{0,3}, check for an exact result.\r\n          // If not, then there are further digits and m will be truthy.\r\n          if (!+n || !+n.slice(1) && n.charAt(0) == '5') {\r\n\r\n            // Truncate to the first rounding digit.\r\n            finalise(r, e + 1, 1);\r\n            m = !r.times(r).eq(x);\r\n          }\r\n\r\n          break;\r\n        }\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return finalise(r, e, Ctor.rounding, m);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of the value in radians of this Decimal.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-Infinity, Infinity]\r\n   *\r\n   * tan(0)         = 0\r\n   * tan(-0)        = -0\r\n   * tan(Infinity)  = NaN\r\n   * tan(-Infinity) = NaN\r\n   * tan(NaN)       = NaN\r\n   *\r\n   */\r\n  P.tangent = P.tan = function () {\r\n    var pr, rm,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (!x.isFinite()) return new Ctor(NaN);\r\n    if (x.isZero()) return new Ctor(x);\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n    Ctor.precision = pr + 10;\r\n    Ctor.rounding = 1;\r\n\r\n    x = x.sin();\r\n    x.s = 1;\r\n    x = divide(x, new Ctor(1).minus(x.times(x)).sqrt(), pr + 10, 0);\r\n\r\n    Ctor.precision = pr;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(quadrant == 2 || quadrant == 4 ? x.neg() : x, pr, rm, true);\r\n  };\r\n\r\n\r\n  /*\r\n   *  n * 0 = 0\r\n   *  n * N = N\r\n   *  n * I = I\r\n   *  0 * n = 0\r\n   *  0 * 0 = 0\r\n   *  0 * N = N\r\n   *  0 * I = N\r\n   *  N * n = N\r\n   *  N * 0 = N\r\n   *  N * N = N\r\n   *  N * I = N\r\n   *  I * n = I\r\n   *  I * 0 = N\r\n   *  I * N = N\r\n   *  I * I = I\r\n   *\r\n   * Return a new Decimal whose value is this Decimal times `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   */\r\n  P.times = P.mul = function (y) {\r\n    var carry, e, i, k, r, rL, t, xdL, ydL,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      xd = x.d,\r\n      yd = (y = new Ctor(y)).d;\r\n\r\n    y.s *= x.s;\r\n\r\n     // If either is NaN, ±Infinity or ±0...\r\n    if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n      return new Ctor(!y.s || xd && !xd[0] && !yd || yd && !yd[0] && !xd\r\n\r\n        // Return NaN if either is NaN.\r\n        // Return NaN if x is ±0 and y is ±Infinity, or y is ±0 and x is ±Infinity.\r\n        ? NaN\r\n\r\n        // Return ±Infinity if either is ±Infinity.\r\n        // Return ±0 if either is ±0.\r\n        : !xd || !yd ? y.s / 0 : y.s * 0);\r\n    }\r\n\r\n    e = mathfloor(x.e / LOG_BASE) + mathfloor(y.e / LOG_BASE);\r\n    xdL = xd.length;\r\n    ydL = yd.length;\r\n\r\n    // Ensure xd points to the longer array.\r\n    if (xdL < ydL) {\r\n      r = xd;\r\n      xd = yd;\r\n      yd = r;\r\n      rL = xdL;\r\n      xdL = ydL;\r\n      ydL = rL;\r\n    }\r\n\r\n    // Initialise the result array with zeros.\r\n    r = [];\r\n    rL = xdL + ydL;\r\n    for (i = rL; i--;) r.push(0);\r\n\r\n    // Multiply!\r\n    for (i = ydL; --i >= 0;) {\r\n      carry = 0;\r\n      for (k = xdL + i; k > i;) {\r\n        t = r[k] + yd[i] * xd[k - i - 1] + carry;\r\n        r[k--] = t % BASE | 0;\r\n        carry = t / BASE | 0;\r\n      }\r\n\r\n      r[k] = (r[k] + carry) % BASE | 0;\r\n    }\r\n\r\n    // Remove trailing zeros.\r\n    for (; !r[--rL];) r.pop();\r\n\r\n    if (carry) ++e;\r\n    else r.shift();\r\n\r\n    y.d = r;\r\n    y.e = getBase10Exponent(r, e);\r\n\r\n    return external ? finalise(y, Ctor.precision, Ctor.rounding) : y;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 2, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toBinary = function (sd, rm) {\r\n    return toStringBinary(this, 2, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `dp`\r\n   * decimal places using rounding mode `rm` or `rounding` if `rm` is omitted.\r\n   *\r\n   * If `dp` is omitted, return a new Decimal whose value is the value of this Decimal.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toDecimalPlaces = P.toDP = function (dp, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n    if (dp === void 0) return x;\r\n\r\n    checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n    if (rm === void 0) rm = Ctor.rounding;\r\n    else checkInt32(rm, 0, 8);\r\n\r\n    return finalise(x, dp + x.e + 1, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in exponential notation rounded to\r\n   * `dp` fixed decimal places using rounding mode `rounding`.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toExponential = function (dp, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x, true);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), dp + 1, rm);\r\n      str = finiteToString(x, true, dp + 1);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in normal (fixed-point) notation to\r\n   * `dp` fixed decimal places and rounded using rounding mode `rm` or `rounding` if `rm` is\r\n   * omitted.\r\n   *\r\n   * As with JavaScript numbers, (-0).toFixed(0) is '0', but e.g. (-0.00001).toFixed(0) is '-0'.\r\n   *\r\n   * [dp] {number} Decimal places. Integer, 0 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * (-0).toFixed(0) is '0', but (-0.1).toFixed(0) is '-0'.\r\n   * (-0).toFixed(1) is '0.0', but (-0.01).toFixed(1) is '-0.0'.\r\n   * (-0).toFixed(3) is '0.000'.\r\n   * (-0.5).toFixed(0) is '-0'.\r\n   *\r\n   */\r\n  P.toFixed = function (dp, rm) {\r\n    var str, y,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (dp === void 0) {\r\n      str = finiteToString(x);\r\n    } else {\r\n      checkInt32(dp, 0, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      y = finalise(new Ctor(x), dp + x.e + 1, rm);\r\n      str = finiteToString(y, false, dp + y.e + 1);\r\n    }\r\n\r\n    // To determine whether to add the minus sign look at the value before it was rounded,\r\n    // i.e. look at `x` rather than `y`.\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return an array representing the value of this Decimal as a simple fraction with an integer\r\n   * numerator and an integer denominator.\r\n   *\r\n   * The denominator will be a positive non-zero value less than or equal to the specified maximum\r\n   * denominator. If a maximum denominator is not specified, the denominator will be the lowest\r\n   * value necessary to represent the number exactly.\r\n   *\r\n   * [maxD] {number|string|Decimal} Maximum denominator. Integer >= 1 and < Infinity.\r\n   *\r\n   */\r\n  P.toFraction = function (maxD) {\r\n    var d, d0, d1, d2, e, k, n, n0, n1, pr, q, r,\r\n      x = this,\r\n      xd = x.d,\r\n      Ctor = x.constructor;\r\n\r\n    if (!xd) return new Ctor(x);\r\n\r\n    n1 = d0 = new Ctor(1);\r\n    d1 = n0 = new Ctor(0);\r\n\r\n    d = new Ctor(d1);\r\n    e = d.e = getPrecision(xd) - x.e - 1;\r\n    k = e % LOG_BASE;\r\n    d.d[0] = mathpow(10, k < 0 ? LOG_BASE + k : k);\r\n\r\n    if (maxD == null) {\r\n\r\n      // d is 10**e, the minimum max-denominator needed.\r\n      maxD = e > 0 ? d : n1;\r\n    } else {\r\n      n = new Ctor(maxD);\r\n      if (!n.isInt() || n.lt(n1)) throw Error(invalidArgument + n);\r\n      maxD = n.gt(d) ? (e > 0 ? d : n1) : n;\r\n    }\r\n\r\n    external = false;\r\n    n = new Ctor(digitsToString(xd));\r\n    pr = Ctor.precision;\r\n    Ctor.precision = e = xd.length * LOG_BASE * 2;\r\n\r\n    for (;;)  {\r\n      q = divide(n, d, 0, 1, 1);\r\n      d2 = d0.plus(q.times(d1));\r\n      if (d2.cmp(maxD) == 1) break;\r\n      d0 = d1;\r\n      d1 = d2;\r\n      d2 = n1;\r\n      n1 = n0.plus(q.times(d2));\r\n      n0 = d2;\r\n      d2 = d;\r\n      d = n.minus(q.times(d2));\r\n      n = d2;\r\n    }\r\n\r\n    d2 = divide(maxD.minus(d0), d1, 0, 1, 1);\r\n    n0 = n0.plus(d2.times(n1));\r\n    d0 = d0.plus(d2.times(d1));\r\n    n0.s = n1.s = x.s;\r\n\r\n    // Determine which fraction is closer to x, n0/d0 or n1/d1?\r\n    r = divide(n1, d1, e, 1).minus(x).abs().cmp(divide(n0, d0, e, 1).minus(x).abs()) < 1\r\n        ? [n1, d1] : [n0, d0];\r\n\r\n    Ctor.precision = pr;\r\n    external = true;\r\n\r\n    return r;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 16, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toHexadecimal = P.toHex = function (sd, rm) {\r\n    return toStringBinary(this, 16, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal whose value is the nearest multiple of `y` in the direction of rounding\r\n   * mode `rm`, or `Decimal.rounding` if `rm` is omitted, to the value of this Decimal.\r\n   *\r\n   * The return value will always have the same sign as this Decimal, unless either this Decimal\r\n   * or `y` is NaN, in which case the return value will be also be NaN.\r\n   *\r\n   * The return value is not affected by the value of `precision`.\r\n   *\r\n   * y {number|string|Decimal} The magnitude to round to a multiple of.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toNearest() rounding mode not an integer: {rm}'\r\n   * 'toNearest() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toNearest = function (y, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (y == null) {\r\n\r\n      // If x is not finite, return x.\r\n      if (!x.d) return x;\r\n\r\n      y = new Ctor(1);\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      y = new Ctor(y);\r\n      if (rm === void 0) {\r\n        rm = Ctor.rounding;\r\n      } else {\r\n        checkInt32(rm, 0, 8);\r\n      }\r\n\r\n      // If x is not finite, return x if y is not NaN, else NaN.\r\n      if (!x.d) return y.s ? x : y;\r\n\r\n      // If y is not finite, return Infinity with the sign of x if y is Infinity, else NaN.\r\n      if (!y.d) {\r\n        if (y.s) y.s = x.s;\r\n        return y;\r\n      }\r\n    }\r\n\r\n    // If y is not zero, calculate the nearest multiple of y to x.\r\n    if (y.d[0]) {\r\n      external = false;\r\n      x = divide(x, y, 0, rm, 1).times(y);\r\n      external = true;\r\n      finalise(x);\r\n\r\n    // If y is zero, return zero with the sign of x.\r\n    } else {\r\n      y.s = x.s;\r\n      x = y;\r\n    }\r\n\r\n    return x;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return the value of this Decimal converted to a number primitive.\r\n   * Zero keeps its sign.\r\n   *\r\n   */\r\n  P.toNumber = function () {\r\n    return +this;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal in base 8, round to `sd` significant\r\n   * digits using rounding mode `rm`.\r\n   *\r\n   * If the optional `sd` argument is present then return binary exponential notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toOctal = function (sd, rm) {\r\n    return toStringBinary(this, 8, sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal raised to the power `y`, rounded\r\n   * to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * ECMAScript compliant.\r\n   *\r\n   *   pow(x, NaN)                           = NaN\r\n   *   pow(x, ±0)                            = 1\r\n\r\n   *   pow(NaN, non-zero)                    = NaN\r\n   *   pow(abs(x) > 1, +Infinity)            = +Infinity\r\n   *   pow(abs(x) > 1, -Infinity)            = +0\r\n   *   pow(abs(x) == 1, ±Infinity)           = NaN\r\n   *   pow(abs(x) < 1, +Infinity)            = +0\r\n   *   pow(abs(x) < 1, -Infinity)            = +Infinity\r\n   *   pow(+Infinity, y > 0)                 = +Infinity\r\n   *   pow(+Infinity, y < 0)                 = +0\r\n   *   pow(-Infinity, odd integer > 0)       = -Infinity\r\n   *   pow(-Infinity, even integer > 0)      = +Infinity\r\n   *   pow(-Infinity, odd integer < 0)       = -0\r\n   *   pow(-Infinity, even integer < 0)      = +0\r\n   *   pow(+0, y > 0)                        = +0\r\n   *   pow(+0, y < 0)                        = +Infinity\r\n   *   pow(-0, odd integer > 0)              = -0\r\n   *   pow(-0, even integer > 0)             = +0\r\n   *   pow(-0, odd integer < 0)              = -Infinity\r\n   *   pow(-0, even integer < 0)             = +Infinity\r\n   *   pow(finite x < 0, finite non-integer) = NaN\r\n   *\r\n   * For non-integer or very large exponents pow(x, y) is calculated using\r\n   *\r\n   *   x^y = exp(y*ln(x))\r\n   *\r\n   * Assuming the first 15 rounding digits are each equally likely to be any digit 0-9, the\r\n   * probability of an incorrectly rounded result\r\n   * P([49]9{14} | [50]0{14}) = 2 * 0.2 * 10^-14 = 4e-15 = 1/2.5e+14\r\n   * i.e. 1 in 250,000,000,000,000\r\n   *\r\n   * If a result is incorrectly rounded the maximum error will be 1 ulp (unit in last place).\r\n   *\r\n   * y {number|string|Decimal} The power to which to raise this Decimal.\r\n   *\r\n   */\r\n  P.toPower = P.pow = function (y) {\r\n    var e, k, pr, r, rm, s,\r\n      x = this,\r\n      Ctor = x.constructor,\r\n      yn = +(y = new Ctor(y));\r\n\r\n    // Either ±Infinity, NaN or ±0?\r\n    if (!x.d || !y.d || !x.d[0] || !y.d[0]) return new Ctor(mathpow(+x, yn));\r\n\r\n    x = new Ctor(x);\r\n\r\n    if (x.eq(1)) return x;\r\n\r\n    pr = Ctor.precision;\r\n    rm = Ctor.rounding;\r\n\r\n    if (y.eq(1)) return finalise(x, pr, rm);\r\n\r\n    // y exponent\r\n    e = mathfloor(y.e / LOG_BASE);\r\n\r\n    // If y is a small integer use the 'exponentiation by squaring' algorithm.\r\n    if (e >= y.d.length - 1 && (k = yn < 0 ? -yn : yn) <= MAX_SAFE_INTEGER) {\r\n      r = intPow(Ctor, x, k, pr);\r\n      return y.s < 0 ? new Ctor(1).div(r) : finalise(r, pr, rm);\r\n    }\r\n\r\n    s = x.s;\r\n\r\n    // if x is negative\r\n    if (s < 0) {\r\n\r\n      // if y is not an integer\r\n      if (e < y.d.length - 1) return new Ctor(NaN);\r\n\r\n      // Result is positive if x is negative and the last digit of integer y is even.\r\n      if ((y.d[e] & 1) == 0) s = 1;\r\n\r\n      // if x.eq(-1)\r\n      if (x.e == 0 && x.d[0] == 1 && x.d.length == 1) {\r\n        x.s = s;\r\n        return x;\r\n      }\r\n    }\r\n\r\n    // Estimate result exponent.\r\n    // x^y = 10^e,  where e = y * log10(x)\r\n    // log10(x) = log10(x_significand) + x_exponent\r\n    // log10(x_significand) = ln(x_significand) / ln(10)\r\n    k = mathpow(+x, yn);\r\n    e = k == 0 || !isFinite(k)\r\n      ? mathfloor(yn * (Math.log('0.' + digitsToString(x.d)) / Math.LN10 + x.e + 1))\r\n      : new Ctor(k + '').e;\r\n\r\n    // Exponent estimate may be incorrect e.g. x: 0.999999999999999999, y: 2.29, e: 0, r.e: -1.\r\n\r\n    // Overflow/underflow?\r\n    if (e > Ctor.maxE + 1 || e < Ctor.minE - 1) return new Ctor(e > 0 ? s / 0 : 0);\r\n\r\n    external = false;\r\n    Ctor.rounding = x.s = 1;\r\n\r\n    // Estimate the extra guard digits needed to ensure five correct rounding digits from\r\n    // naturalLogarithm(x). Example of failure without these extra digits (precision: 10):\r\n    // new Decimal(2.32456).pow('2087987436534566.46411')\r\n    // should be 1.162377823e+764914905173815, but is 1.162355823e+764914905173815\r\n    k = Math.min(12, (e + '').length);\r\n\r\n    // r = x^y = exp(y*ln(x))\r\n    r = naturalExponential(y.times(naturalLogarithm(x, pr + k)), pr);\r\n\r\n    // r may be Infinity, e.g. (0.9999999999999999).pow(-1e+40)\r\n    if (r.d) {\r\n\r\n      // Truncate to the required precision plus five rounding digits.\r\n      r = finalise(r, pr + 5, 1);\r\n\r\n      // If the rounding digits are [49]9999 or [50]0000 increase the precision by 10 and recalculate\r\n      // the result.\r\n      if (checkRoundingDigits(r.d, pr, rm)) {\r\n        e = pr + 10;\r\n\r\n        // Truncate to the increased precision plus five rounding digits.\r\n        r = finalise(naturalExponential(y.times(naturalLogarithm(x, e + k)), e), e + 5, 1);\r\n\r\n        // Check for 14 nines from the 2nd rounding digit (the first rounding digit may be 4 or 9).\r\n        if (+digitsToString(r.d).slice(pr + 1, pr + 15) + 1 == 1e14) {\r\n          r = finalise(r, pr + 1, 0);\r\n        }\r\n      }\r\n    }\r\n\r\n    r.s = s;\r\n    external = true;\r\n    Ctor.rounding = rm;\r\n\r\n    return finalise(r, pr, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal rounded to `sd` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * Return exponential notation if `sd` is less than the number of digits necessary to represent\r\n   * the integer part of the value in normal notation.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   */\r\n  P.toPrecision = function (sd, rm) {\r\n    var str,\r\n      x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n\r\n      x = finalise(new Ctor(x), sd, rm);\r\n      str = finiteToString(x, sd <= x.e || x.e <= Ctor.toExpNeg, sd);\r\n    }\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal rounded to a maximum of `sd`\r\n   * significant digits using rounding mode `rm`, or to `precision` and `rounding` respectively if\r\n   * omitted.\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 1 to MAX_DIGITS inclusive.\r\n   * [rm] {number} Rounding mode. Integer, 0 to 8 inclusive.\r\n   *\r\n   * 'toSD() digits out of range: {sd}'\r\n   * 'toSD() digits not an integer: {sd}'\r\n   * 'toSD() rounding mode not an integer: {rm}'\r\n   * 'toSD() rounding mode out of range: {rm}'\r\n   *\r\n   */\r\n  P.toSignificantDigits = P.toSD = function (sd, rm) {\r\n    var x = this,\r\n      Ctor = x.constructor;\r\n\r\n    if (sd === void 0) {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    } else {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    }\r\n\r\n    return finalise(new Ctor(x), sd, rm);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   *\r\n   * Return exponential notation if this Decimal has a positive exponent equal to or greater than\r\n   * `toExpPos`, or a negative exponent equal to or less than `toExpNeg`.\r\n   *\r\n   */\r\n  P.toString = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() && !x.isZero() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of this Decimal truncated to a whole number.\r\n   *\r\n   */\r\n  P.truncated = P.trunc = function () {\r\n    return finalise(new this.constructor(this), this.e + 1, 1);\r\n  };\r\n\r\n\r\n  /*\r\n   * Return a string representing the value of this Decimal.\r\n   * Unlike `toString`, negative zero will include the minus sign.\r\n   *\r\n   */\r\n  P.valueOf = P.toJSON = function () {\r\n    var x = this,\r\n      Ctor = x.constructor,\r\n      str = finiteToString(x, x.e <= Ctor.toExpNeg || x.e >= Ctor.toExpPos);\r\n\r\n    return x.isNeg() ? '-' + str : str;\r\n  };\r\n\r\n\r\n  // Helper functions for Decimal.prototype (P) and/or Decimal methods, and their callers.\r\n\r\n\r\n  /*\r\n   *  digitsToString           P.cubeRoot, P.logarithm, P.squareRoot, P.toFraction, P.toPower,\r\n   *                           finiteToString, naturalExponential, naturalLogarithm\r\n   *  checkInt32               P.toDecimalPlaces, P.toExponential, P.toFixed, P.toNearest,\r\n   *                           P.toPrecision, P.toSignificantDigits, toStringBinary, random\r\n   *  checkRoundingDigits      P.logarithm, P.toPower, naturalExponential, naturalLogarithm\r\n   *  convertBase              toStringBinary, parseOther\r\n   *  cos                      P.cos\r\n   *  divide                   P.atanh, P.cubeRoot, P.dividedBy, P.dividedToIntegerBy,\r\n   *                           P.logarithm, P.modulo, P.squareRoot, P.tan, P.tanh, P.toFraction,\r\n   *                           P.toNearest, toStringBinary, naturalExponential, naturalLogarithm,\r\n   *                           taylorSeries, atan2, parseOther\r\n   *  finalise                 P.absoluteValue, P.atan, P.atanh, P.ceil, P.cos, P.cosh,\r\n   *                           P.cubeRoot, P.dividedToIntegerBy, P.floor, P.logarithm, P.minus,\r\n   *                           P.modulo, P.negated, P.plus, P.round, P.sin, P.sinh, P.squareRoot,\r\n   *                           P.tan, P.times, P.toDecimalPlaces, P.toExponential, P.toFixed,\r\n   *                           P.toNearest, P.toPower, P.toPrecision, P.toSignificantDigits,\r\n   *                           P.truncated, divide, getLn10, getPi, naturalExponential,\r\n   *                           naturalLogarithm, ceil, floor, round, trunc\r\n   *  finiteToString           P.toExponential, P.toFixed, P.toPrecision, P.toString, P.valueOf,\r\n   *                           toStringBinary\r\n   *  getBase10Exponent        P.minus, P.plus, P.times, parseOther\r\n   *  getLn10                  P.logarithm, naturalLogarithm\r\n   *  getPi                    P.acos, P.asin, P.atan, toLessThanHalfPi, atan2\r\n   *  getPrecision             P.precision, P.toFraction\r\n   *  getZeroString            digitsToString, finiteToString\r\n   *  intPow                   P.toPower, parseOther\r\n   *  isOdd                    toLessThanHalfPi\r\n   *  maxOrMin                 max, min\r\n   *  naturalExponential       P.naturalExponential, P.toPower\r\n   *  naturalLogarithm         P.acosh, P.asinh, P.atanh, P.logarithm, P.naturalLogarithm,\r\n   *                           P.toPower, naturalExponential\r\n   *  nonFiniteToString        finiteToString, toStringBinary\r\n   *  parseDecimal             Decimal\r\n   *  parseOther               Decimal\r\n   *  sin                      P.sin\r\n   *  taylorSeries             P.cosh, P.sinh, cos, sin\r\n   *  toLessThanHalfPi         P.cos, P.sin\r\n   *  toStringBinary           P.toBinary, P.toHexadecimal, P.toOctal\r\n   *  truncate                 intPow\r\n   *\r\n   *  Throws:                  P.logarithm, P.precision, P.toFraction, checkInt32, getLn10, getPi,\r\n   *                           naturalLogarithm, config, parseOther, random, Decimal\r\n   */\r\n\r\n\r\n  function digitsToString(d) {\r\n    var i, k, ws,\r\n      indexOfLastWord = d.length - 1,\r\n      str = '',\r\n      w = d[0];\r\n\r\n    if (indexOfLastWord > 0) {\r\n      str += w;\r\n      for (i = 1; i < indexOfLastWord; i++) {\r\n        ws = d[i] + '';\r\n        k = LOG_BASE - ws.length;\r\n        if (k) str += getZeroString(k);\r\n        str += ws;\r\n      }\r\n\r\n      w = d[i];\r\n      ws = w + '';\r\n      k = LOG_BASE - ws.length;\r\n      if (k) str += getZeroString(k);\r\n    } else if (w === 0) {\r\n      return '0';\r\n    }\r\n\r\n    // Remove trailing zeros of last w.\r\n    for (; w % 10 === 0;) w /= 10;\r\n\r\n    return str + w;\r\n  }\r\n\r\n\r\n  function checkInt32(i, min, max) {\r\n    if (i !== ~~i || i < min || i > max) {\r\n      throw Error(invalidArgument + i);\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Check 5 rounding digits if `repeating` is null, 4 otherwise.\r\n   * `repeating == null` if caller is `log` or `pow`,\r\n   * `repeating != null` if caller is `naturalLogarithm` or `naturalExponential`.\r\n   */\r\n  function checkRoundingDigits(d, i, rm, repeating) {\r\n    var di, k, r, rd;\r\n\r\n    // Get the length of the first word of the array d.\r\n    for (k = d[0]; k >= 10; k /= 10) --i;\r\n\r\n    // Is the rounding digit in the first word of d?\r\n    if (--i < 0) {\r\n      i += LOG_BASE;\r\n      di = 0;\r\n    } else {\r\n      di = Math.ceil((i + 1) / LOG_BASE);\r\n      i %= LOG_BASE;\r\n    }\r\n\r\n    // i is the index (0 - 6) of the rounding digit.\r\n    // E.g. if within the word 3487563 the first rounding digit is 5,\r\n    // then i = 4, k = 1000, rd = 3487563 % 1000 = 563\r\n    k = mathpow(10, LOG_BASE - i);\r\n    rd = d[di] % k | 0;\r\n\r\n    if (repeating == null) {\r\n      if (i < 3) {\r\n        if (i == 0) rd = rd / 100 | 0;\r\n        else if (i == 1) rd = rd / 10 | 0;\r\n        r = rm < 4 && rd == 99999 || rm > 3 && rd == 49999 || rd == 50000 || rd == 0;\r\n      } else {\r\n        r = (rm < 4 && rd + 1 == k || rm > 3 && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 100 | 0) == mathpow(10, i - 2) - 1 ||\r\n            (rd == k / 2 || rd == 0) && (d[di + 1] / k / 100 | 0) == 0;\r\n      }\r\n    } else {\r\n      if (i < 4) {\r\n        if (i == 0) rd = rd / 1000 | 0;\r\n        else if (i == 1) rd = rd / 100 | 0;\r\n        else if (i == 2) rd = rd / 10 | 0;\r\n        r = (repeating || rm < 4) && rd == 9999 || !repeating && rm > 3 && rd == 4999;\r\n      } else {\r\n        r = ((repeating || rm < 4) && rd + 1 == k ||\r\n        (!repeating && rm > 3) && rd + 1 == k / 2) &&\r\n          (d[di + 1] / k / 1000 | 0) == mathpow(10, i - 3) - 1;\r\n      }\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  // Convert string of `baseIn` to an array of numbers of `baseOut`.\r\n  // Eg. convertBase('255', 10, 16) returns [15, 15].\r\n  // Eg. convertBase('ff', 16, 10) returns [2, 5, 5].\r\n  function convertBase(str, baseIn, baseOut) {\r\n    var j,\r\n      arr = [0],\r\n      arrL,\r\n      i = 0,\r\n      strL = str.length;\r\n\r\n    for (; i < strL;) {\r\n      for (arrL = arr.length; arrL--;) arr[arrL] *= baseIn;\r\n      arr[0] += NUMERALS.indexOf(str.charAt(i++));\r\n      for (j = 0; j < arr.length; j++) {\r\n        if (arr[j] > baseOut - 1) {\r\n          if (arr[j + 1] === void 0) arr[j + 1] = 0;\r\n          arr[j + 1] += arr[j] / baseOut | 0;\r\n          arr[j] %= baseOut;\r\n        }\r\n      }\r\n    }\r\n\r\n    return arr.reverse();\r\n  }\r\n\r\n\r\n  /*\r\n   * cos(x) = 1 - x^2/2! + x^4/4! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function cosine(Ctor, x) {\r\n    var k, len, y;\r\n\r\n    if (x.isZero()) return x;\r\n\r\n    // Argument reduction: cos(4x) = 8*(cos^4(x) - cos^2(x)) + 1\r\n    // i.e. cos(x) = 8*(cos^4(x/4) - cos^2(x/4)) + 1\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    len = x.d.length;\r\n    if (len < 32) {\r\n      k = Math.ceil(len / 3);\r\n      y = (1 / tinyPow(4, k)).toString();\r\n    } else {\r\n      k = 16;\r\n      y = '2.3283064365386962890625e-10';\r\n    }\r\n\r\n    Ctor.precision += k;\r\n\r\n    x = taylorSeries(Ctor, 1, x.times(y), new Ctor(1));\r\n\r\n    // Reverse argument reduction\r\n    for (var i = k; i--;) {\r\n      var cos2x = x.times(x);\r\n      x = cos2x.times(cos2x).minus(cos2x).times(8).plus(1);\r\n    }\r\n\r\n    Ctor.precision -= k;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Perform division in the specified base.\r\n   */\r\n  var divide = (function () {\r\n\r\n    // Assumes non-zero x and k, and hence non-zero result.\r\n    function multiplyInteger(x, k, base) {\r\n      var temp,\r\n        carry = 0,\r\n        i = x.length;\r\n\r\n      for (x = x.slice(); i--;) {\r\n        temp = x[i] * k + carry;\r\n        x[i] = temp % base | 0;\r\n        carry = temp / base | 0;\r\n      }\r\n\r\n      if (carry) x.unshift(carry);\r\n\r\n      return x;\r\n    }\r\n\r\n    function compare(a, b, aL, bL) {\r\n      var i, r;\r\n\r\n      if (aL != bL) {\r\n        r = aL > bL ? 1 : -1;\r\n      } else {\r\n        for (i = r = 0; i < aL; i++) {\r\n          if (a[i] != b[i]) {\r\n            r = a[i] > b[i] ? 1 : -1;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      return r;\r\n    }\r\n\r\n    function subtract(a, b, aL, base) {\r\n      var i = 0;\r\n\r\n      // Subtract b from a.\r\n      for (; aL--;) {\r\n        a[aL] -= i;\r\n        i = a[aL] < b[aL] ? 1 : 0;\r\n        a[aL] = i * base + a[aL] - b[aL];\r\n      }\r\n\r\n      // Remove leading zeros.\r\n      for (; !a[0] && a.length > 1;) a.shift();\r\n    }\r\n\r\n    return function (x, y, pr, rm, dp, base) {\r\n      var cmp, e, i, k, logBase, more, prod, prodL, q, qd, rem, remL, rem0, sd, t, xi, xL, yd0,\r\n        yL, yz,\r\n        Ctor = x.constructor,\r\n        sign = x.s == y.s ? 1 : -1,\r\n        xd = x.d,\r\n        yd = y.d;\r\n\r\n      // Either NaN, Infinity or 0?\r\n      if (!xd || !xd[0] || !yd || !yd[0]) {\r\n\r\n        return new Ctor(// Return NaN if either NaN, or both Infinity or 0.\r\n          !x.s || !y.s || (xd ? yd && xd[0] == yd[0] : !yd) ? NaN :\r\n\r\n          // Return ±0 if x is 0 or y is ±Infinity, or return ±Infinity as y is 0.\r\n          xd && xd[0] == 0 || !yd ? sign * 0 : sign / 0);\r\n      }\r\n\r\n      if (base) {\r\n        logBase = 1;\r\n        e = x.e - y.e;\r\n      } else {\r\n        base = BASE;\r\n        logBase = LOG_BASE;\r\n        e = mathfloor(x.e / logBase) - mathfloor(y.e / logBase);\r\n      }\r\n\r\n      yL = yd.length;\r\n      xL = xd.length;\r\n      q = new Ctor(sign);\r\n      qd = q.d = [];\r\n\r\n      // Result exponent may be one less than e.\r\n      // The digit array of a Decimal from toStringBinary may have trailing zeros.\r\n      for (i = 0; yd[i] == (xd[i] || 0); i++);\r\n\r\n      if (yd[i] > (xd[i] || 0)) e--;\r\n\r\n      if (pr == null) {\r\n        sd = pr = Ctor.precision;\r\n        rm = Ctor.rounding;\r\n      } else if (dp) {\r\n        sd = pr + (x.e - y.e) + 1;\r\n      } else {\r\n        sd = pr;\r\n      }\r\n\r\n      if (sd < 0) {\r\n        qd.push(1);\r\n        more = true;\r\n      } else {\r\n\r\n        // Convert precision in number of base 10 digits to base 1e7 digits.\r\n        sd = sd / logBase + 2 | 0;\r\n        i = 0;\r\n\r\n        // divisor < 1e7\r\n        if (yL == 1) {\r\n          k = 0;\r\n          yd = yd[0];\r\n          sd++;\r\n\r\n          // k is the carry.\r\n          for (; (i < xL || k) && sd--; i++) {\r\n            t = k * base + (xd[i] || 0);\r\n            qd[i] = t / yd | 0;\r\n            k = t % yd | 0;\r\n          }\r\n\r\n          more = k || i < xL;\r\n\r\n        // divisor >= 1e7\r\n        } else {\r\n\r\n          // Normalise xd and yd so highest order digit of yd is >= base/2\r\n          k = base / (yd[0] + 1) | 0;\r\n\r\n          if (k > 1) {\r\n            yd = multiplyInteger(yd, k, base);\r\n            xd = multiplyInteger(xd, k, base);\r\n            yL = yd.length;\r\n            xL = xd.length;\r\n          }\r\n\r\n          xi = yL;\r\n          rem = xd.slice(0, yL);\r\n          remL = rem.length;\r\n\r\n          // Add zeros to make remainder as long as divisor.\r\n          for (; remL < yL;) rem[remL++] = 0;\r\n\r\n          yz = yd.slice();\r\n          yz.unshift(0);\r\n          yd0 = yd[0];\r\n\r\n          if (yd[1] >= base / 2) ++yd0;\r\n\r\n          do {\r\n            k = 0;\r\n\r\n            // Compare divisor and remainder.\r\n            cmp = compare(yd, rem, yL, remL);\r\n\r\n            // If divisor < remainder.\r\n            if (cmp < 0) {\r\n\r\n              // Calculate trial digit, k.\r\n              rem0 = rem[0];\r\n              if (yL != remL) rem0 = rem0 * base + (rem[1] || 0);\r\n\r\n              // k will be how many times the divisor goes into the current remainder.\r\n              k = rem0 / yd0 | 0;\r\n\r\n              //  Algorithm:\r\n              //  1. product = divisor * trial digit (k)\r\n              //  2. if product > remainder: product -= divisor, k--\r\n              //  3. remainder -= product\r\n              //  4. if product was < remainder at 2:\r\n              //    5. compare new remainder and divisor\r\n              //    6. If remainder > divisor: remainder -= divisor, k++\r\n\r\n              if (k > 1) {\r\n                if (k >= base) k = base - 1;\r\n\r\n                // product = divisor * trial digit.\r\n                prod = multiplyInteger(yd, k, base);\r\n                prodL = prod.length;\r\n                remL = rem.length;\r\n\r\n                // Compare product and remainder.\r\n                cmp = compare(prod, rem, prodL, remL);\r\n\r\n                // product > remainder.\r\n                if (cmp == 1) {\r\n                  k--;\r\n\r\n                  // Subtract divisor from product.\r\n                  subtract(prod, yL < prodL ? yz : yd, prodL, base);\r\n                }\r\n              } else {\r\n\r\n                // cmp is -1.\r\n                // If k is 0, there is no need to compare yd and rem again below, so change cmp to 1\r\n                // to avoid it. If k is 1 there is a need to compare yd and rem again below.\r\n                if (k == 0) cmp = k = 1;\r\n                prod = yd.slice();\r\n              }\r\n\r\n              prodL = prod.length;\r\n              if (prodL < remL) prod.unshift(0);\r\n\r\n              // Subtract product from remainder.\r\n              subtract(rem, prod, remL, base);\r\n\r\n              // If product was < previous remainder.\r\n              if (cmp == -1) {\r\n                remL = rem.length;\r\n\r\n                // Compare divisor and new remainder.\r\n                cmp = compare(yd, rem, yL, remL);\r\n\r\n                // If divisor < new remainder, subtract divisor from remainder.\r\n                if (cmp < 1) {\r\n                  k++;\r\n\r\n                  // Subtract divisor from remainder.\r\n                  subtract(rem, yL < remL ? yz : yd, remL, base);\r\n                }\r\n              }\r\n\r\n              remL = rem.length;\r\n            } else if (cmp === 0) {\r\n              k++;\r\n              rem = [0];\r\n            }    // if cmp === 1, k will be 0\r\n\r\n            // Add the next digit, k, to the result array.\r\n            qd[i++] = k;\r\n\r\n            // Update the remainder.\r\n            if (cmp && rem[0]) {\r\n              rem[remL++] = xd[xi] || 0;\r\n            } else {\r\n              rem = [xd[xi]];\r\n              remL = 1;\r\n            }\r\n\r\n          } while ((xi++ < xL || rem[0] !== void 0) && sd--);\r\n\r\n          more = rem[0] !== void 0;\r\n        }\r\n\r\n        // Leading zero?\r\n        if (!qd[0]) qd.shift();\r\n      }\r\n\r\n      // logBase is 1 when divide is being used for base conversion.\r\n      if (logBase == 1) {\r\n        q.e = e;\r\n        inexact = more;\r\n      } else {\r\n\r\n        // To calculate q.e, first get the number of digits of qd[0].\r\n        for (i = 1, k = qd[0]; k >= 10; k /= 10) i++;\r\n        q.e = i + e * logBase - 1;\r\n\r\n        finalise(q, dp ? pr + q.e + 1 : pr, rm, more);\r\n      }\r\n\r\n      return q;\r\n    };\r\n  })();\r\n\r\n\r\n  /*\r\n   * Round `x` to `sd` significant digits using rounding mode `rm`.\r\n   * Check for over/under-flow.\r\n   */\r\n   function finalise(x, sd, rm, isTruncated) {\r\n    var digits, i, j, k, rd, roundUp, w, xd, xdi,\r\n      Ctor = x.constructor;\r\n\r\n    // Don't round if sd is null or undefined.\r\n    out: if (sd != null) {\r\n      xd = x.d;\r\n\r\n      // Infinity/NaN.\r\n      if (!xd) return x;\r\n\r\n      // rd: the rounding digit, i.e. the digit after the digit that may be rounded up.\r\n      // w: the word of xd containing rd, a base 1e7 number.\r\n      // xdi: the index of w within xd.\r\n      // digits: the number of digits of w.\r\n      // i: what would be the index of rd within w if all the numbers were 7 digits long (i.e. if\r\n      // they had leading zeros)\r\n      // j: if > 0, the actual index of rd within w (if < 0, rd is a leading zero).\r\n\r\n      // Get the length of the first word of the digits array xd.\r\n      for (digits = 1, k = xd[0]; k >= 10; k /= 10) digits++;\r\n      i = sd - digits;\r\n\r\n      // Is the rounding digit in the first word of xd?\r\n      if (i < 0) {\r\n        i += LOG_BASE;\r\n        j = sd;\r\n        w = xd[xdi = 0];\r\n\r\n        // Get the rounding digit at index j of w.\r\n        rd = w / mathpow(10, digits - j - 1) % 10 | 0;\r\n      } else {\r\n        xdi = Math.ceil((i + 1) / LOG_BASE);\r\n        k = xd.length;\r\n        if (xdi >= k) {\r\n          if (isTruncated) {\r\n\r\n            // Needed by `naturalExponential`, `naturalLogarithm` and `squareRoot`.\r\n            for (; k++ <= xdi;) xd.push(0);\r\n            w = rd = 0;\r\n            digits = 1;\r\n            i %= LOG_BASE;\r\n            j = i - LOG_BASE + 1;\r\n          } else {\r\n            break out;\r\n          }\r\n        } else {\r\n          w = k = xd[xdi];\r\n\r\n          // Get the number of digits of w.\r\n          for (digits = 1; k >= 10; k /= 10) digits++;\r\n\r\n          // Get the index of rd within w.\r\n          i %= LOG_BASE;\r\n\r\n          // Get the index of rd within w, adjusted for leading zeros.\r\n          // The number of leading zeros of w is given by LOG_BASE - digits.\r\n          j = i - LOG_BASE + digits;\r\n\r\n          // Get the rounding digit at index j of w.\r\n          rd = j < 0 ? 0 : w / mathpow(10, digits - j - 1) % 10 | 0;\r\n        }\r\n      }\r\n\r\n      // Are there any non-zero digits after the rounding digit?\r\n      isTruncated = isTruncated || sd < 0 ||\r\n        xd[xdi + 1] !== void 0 || (j < 0 ? w : w % mathpow(10, digits - j - 1));\r\n\r\n      // The expression `w % mathpow(10, digits - j - 1)` returns all the digits of w to the right\r\n      // of the digit at (left-to-right) index j, e.g. if w is 908714 and j is 2, the expression\r\n      // will give 714.\r\n\r\n      roundUp = rm < 4\r\n        ? (rd || isTruncated) && (rm == 0 || rm == (x.s < 0 ? 3 : 2))\r\n        : rd > 5 || rd == 5 && (rm == 4 || isTruncated || rm == 6 &&\r\n\r\n          // Check whether the digit to the left of the rounding digit is odd.\r\n          ((i > 0 ? j > 0 ? w / mathpow(10, digits - j) : 0 : xd[xdi - 1]) % 10) & 1 ||\r\n            rm == (x.s < 0 ? 8 : 7));\r\n\r\n      if (sd < 1 || !xd[0]) {\r\n        xd.length = 0;\r\n        if (roundUp) {\r\n\r\n          // Convert sd to decimal places.\r\n          sd -= x.e + 1;\r\n\r\n          // 1, 0.1, 0.01, 0.001, 0.0001 etc.\r\n          xd[0] = mathpow(10, (LOG_BASE - sd % LOG_BASE) % LOG_BASE);\r\n          x.e = -sd || 0;\r\n        } else {\r\n\r\n          // Zero.\r\n          xd[0] = x.e = 0;\r\n        }\r\n\r\n        return x;\r\n      }\r\n\r\n      // Remove excess digits.\r\n      if (i == 0) {\r\n        xd.length = xdi;\r\n        k = 1;\r\n        xdi--;\r\n      } else {\r\n        xd.length = xdi + 1;\r\n        k = mathpow(10, LOG_BASE - i);\r\n\r\n        // E.g. 56700 becomes 56000 if 7 is the rounding digit.\r\n        // j > 0 means i > number of leading zeros of w.\r\n        xd[xdi] = j > 0 ? (w / mathpow(10, digits - j) % mathpow(10, j) | 0) * k : 0;\r\n      }\r\n\r\n      if (roundUp) {\r\n        for (;;) {\r\n\r\n          // Is the digit to be rounded up in the first word of xd?\r\n          if (xdi == 0) {\r\n\r\n            // i will be the length of xd[0] before k is added.\r\n            for (i = 1, j = xd[0]; j >= 10; j /= 10) i++;\r\n            j = xd[0] += k;\r\n            for (k = 1; j >= 10; j /= 10) k++;\r\n\r\n            // if i != k the length has increased.\r\n            if (i != k) {\r\n              x.e++;\r\n              if (xd[0] == BASE) xd[0] = 1;\r\n            }\r\n\r\n            break;\r\n          } else {\r\n            xd[xdi] += k;\r\n            if (xd[xdi] != BASE) break;\r\n            xd[xdi--] = 0;\r\n            k = 1;\r\n          }\r\n        }\r\n      }\r\n\r\n      // Remove trailing zeros.\r\n      for (i = xd.length; xd[--i] === 0;) xd.pop();\r\n    }\r\n\r\n    if (external) {\r\n\r\n      // Overflow?\r\n      if (x.e > Ctor.maxE) {\r\n\r\n        // Infinity.\r\n        x.d = null;\r\n        x.e = NaN;\r\n\r\n      // Underflow?\r\n      } else if (x.e < Ctor.minE) {\r\n\r\n        // Zero.\r\n        x.e = 0;\r\n        x.d = [0];\r\n        // Ctor.underflow = true;\r\n      } // else Ctor.underflow = false;\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  function finiteToString(x, isExp, sd) {\r\n    if (!x.isFinite()) return nonFiniteToString(x);\r\n    var k,\r\n      e = x.e,\r\n      str = digitsToString(x.d),\r\n      len = str.length;\r\n\r\n    if (isExp) {\r\n      if (sd && (k = sd - len) > 0) {\r\n        str = str.charAt(0) + '.' + str.slice(1) + getZeroString(k);\r\n      } else if (len > 1) {\r\n        str = str.charAt(0) + '.' + str.slice(1);\r\n      }\r\n\r\n      str = str + (x.e < 0 ? 'e' : 'e+') + x.e;\r\n    } else if (e < 0) {\r\n      str = '0.' + getZeroString(-e - 1) + str;\r\n      if (sd && (k = sd - len) > 0) str += getZeroString(k);\r\n    } else if (e >= len) {\r\n      str += getZeroString(e + 1 - len);\r\n      if (sd && (k = sd - e - 1) > 0) str = str + '.' + getZeroString(k);\r\n    } else {\r\n      if ((k = e + 1) < len) str = str.slice(0, k) + '.' + str.slice(k);\r\n      if (sd && (k = sd - len) > 0) {\r\n        if (e + 1 === len) str += '.';\r\n        str += getZeroString(k);\r\n      }\r\n    }\r\n\r\n    return str;\r\n  }\r\n\r\n\r\n  // Calculate the base 10 exponent from the base 1e7 exponent.\r\n  function getBase10Exponent(digits, e) {\r\n    var w = digits[0];\r\n\r\n    // Add the number of digits of the first word of the digits array.\r\n    for ( e *= LOG_BASE; w >= 10; w /= 10) e++;\r\n    return e;\r\n  }\r\n\r\n\r\n  function getLn10(Ctor, sd, pr) {\r\n    if (sd > LN10_PRECISION) {\r\n\r\n      // Reset global state in case the exception is caught.\r\n      external = true;\r\n      if (pr) Ctor.precision = pr;\r\n      throw Error(precisionLimitExceeded);\r\n    }\r\n    return finalise(new Ctor(LN10), sd, 1, true);\r\n  }\r\n\r\n\r\n  function getPi(Ctor, sd, rm) {\r\n    if (sd > PI_PRECISION) throw Error(precisionLimitExceeded);\r\n    return finalise(new Ctor(PI), sd, rm, true);\r\n  }\r\n\r\n\r\n  function getPrecision(digits) {\r\n    var w = digits.length - 1,\r\n      len = w * LOG_BASE + 1;\r\n\r\n    w = digits[w];\r\n\r\n    // If non-zero...\r\n    if (w) {\r\n\r\n      // Subtract the number of trailing zeros of the last word.\r\n      for (; w % 10 == 0; w /= 10) len--;\r\n\r\n      // Add the number of digits of the first word.\r\n      for (w = digits[0]; w >= 10; w /= 10) len++;\r\n    }\r\n\r\n    return len;\r\n  }\r\n\r\n\r\n  function getZeroString(k) {\r\n    var zs = '';\r\n    for (; k--;) zs += '0';\r\n    return zs;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the value of Decimal `x` to the power `n`, where `n` is an\r\n   * integer of type number.\r\n   *\r\n   * Implements 'exponentiation by squaring'. Called by `pow` and `parseOther`.\r\n   *\r\n   */\r\n  function intPow(Ctor, x, n, pr) {\r\n    var isTruncated,\r\n      r = new Ctor(1),\r\n\r\n      // Max n of 9007199254740991 takes 53 loop iterations.\r\n      // Maximum digits array length; leaves [28, 34] guard digits.\r\n      k = Math.ceil(pr / LOG_BASE + 4);\r\n\r\n    external = false;\r\n\r\n    for (;;) {\r\n      if (n % 2) {\r\n        r = r.times(x);\r\n        if (truncate(r.d, k)) isTruncated = true;\r\n      }\r\n\r\n      n = mathfloor(n / 2);\r\n      if (n === 0) {\r\n\r\n        // To ensure correct rounding when r.d is truncated, increment the last word if it is zero.\r\n        n = r.d.length - 1;\r\n        if (isTruncated && r.d[n] === 0) ++r.d[n];\r\n        break;\r\n      }\r\n\r\n      x = x.times(x);\r\n      truncate(x.d, k);\r\n    }\r\n\r\n    external = true;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  function isOdd(n) {\r\n    return n.d[n.d.length - 1] & 1;\r\n  }\r\n\r\n\r\n  /*\r\n   * Handle `max` and `min`. `ltgt` is 'lt' or 'gt'.\r\n   */\r\n  function maxOrMin(Ctor, args, ltgt) {\r\n    var y,\r\n      x = new Ctor(args[0]),\r\n      i = 0;\r\n\r\n    for (; ++i < args.length;) {\r\n      y = new Ctor(args[i]);\r\n      if (!y.s) {\r\n        x = y;\r\n        break;\r\n      } else if (x[ltgt](y)) {\r\n        x = y;\r\n      }\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   * Taylor/Maclaurin series.\r\n   *\r\n   * exp(x) = x^0/0! + x^1/1! + x^2/2! + x^3/3! + ...\r\n   *\r\n   * Argument reduction:\r\n   *   Repeat x = x / 32, k += 5, until |x| < 0.1\r\n   *   exp(x) = exp(x / 2^k)^(2^k)\r\n   *\r\n   * Previously, the argument was initially reduced by\r\n   * exp(x) = exp(r) * 10^k  where r = x - k * ln10, k = floor(x / ln10)\r\n   * to first put r in the range [0, ln10], before dividing by 32 until |x| < 0.1, but this was\r\n   * found to be slower than just dividing repeatedly by 32 as above.\r\n   *\r\n   * Max integer argument: exp('20723265836946413') = 6.3e+9000000000000000\r\n   * Min integer argument: exp('-20723265836946411') = 1.2e-9000000000000000\r\n   * (Math object integer min/max: Math.exp(709) = 8.2e+307, Math.exp(-745) = 5e-324)\r\n   *\r\n   *  exp(Infinity)  = Infinity\r\n   *  exp(-Infinity) = 0\r\n   *  exp(NaN)       = NaN\r\n   *  exp(±0)        = 1\r\n   *\r\n   *  exp(x) is non-terminating for any finite, non-zero x.\r\n   *\r\n   *  The result will always be correctly rounded.\r\n   *\r\n   */\r\n  function naturalExponential(x, sd) {\r\n    var denominator, guard, j, pow, sum, t, wpr,\r\n      rep = 0,\r\n      i = 0,\r\n      k = 0,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // 0/NaN/Infinity?\r\n    if (!x.d || !x.d[0] || x.e > 17) {\r\n\r\n      return new Ctor(x.d\r\n        ? !x.d[0] ? 1 : x.s < 0 ? 0 : 1 / 0\r\n        : x.s ? x.s < 0 ? 0 : x : 0 / 0);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    t = new Ctor(0.03125);\r\n\r\n    // while abs(x) >= 0.1\r\n    while (x.e > -2) {\r\n\r\n      // x = x / 2^5\r\n      x = x.times(t);\r\n      k += 5;\r\n    }\r\n\r\n    // Use 2 * log10(2^k) + 5 (empirically derived) to estimate the increase in precision\r\n    // necessary to ensure the first 4 rounding digits are correct.\r\n    guard = Math.log(mathpow(2, k)) / Math.LN10 * 2 + 5 | 0;\r\n    wpr += guard;\r\n    denominator = pow = sum = new Ctor(1);\r\n    Ctor.precision = wpr;\r\n\r\n    for (;;) {\r\n      pow = finalise(pow.times(x), wpr, 1);\r\n      denominator = denominator.times(++i);\r\n      t = sum.plus(divide(pow, denominator, wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        j = k;\r\n        while (j--) sum = finalise(sum.times(sum), wpr, 1);\r\n\r\n        // Check to see if the first 4 rounding digits are [49]999.\r\n        // If so, repeat the summation with a higher precision, otherwise\r\n        // e.g. with precision: 18, rounding: 1\r\n        // exp(18.404272462595034083567793919843761) = 98372560.1229999999 (should be 98372560.123)\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n\r\n          if (rep < 3 && checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += 10;\r\n            denominator = pow = t = new Ctor(1);\r\n            i = 0;\r\n            rep++;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n    }\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x` rounded to `sd` significant\r\n   * digits.\r\n   *\r\n   *  ln(-n)        = NaN\r\n   *  ln(0)         = -Infinity\r\n   *  ln(-0)        = -Infinity\r\n   *  ln(1)         = 0\r\n   *  ln(Infinity)  = Infinity\r\n   *  ln(-Infinity) = NaN\r\n   *  ln(NaN)       = NaN\r\n   *\r\n   *  ln(n) (n != 1) is non-terminating.\r\n   *\r\n   */\r\n  function naturalLogarithm(y, sd) {\r\n    var c, c0, denominator, e, numerator, rep, sum, t, wpr, x1, x2,\r\n      n = 1,\r\n      guard = 10,\r\n      x = y,\r\n      xd = x.d,\r\n      Ctor = x.constructor,\r\n      rm = Ctor.rounding,\r\n      pr = Ctor.precision;\r\n\r\n    // Is x negative or Infinity, NaN, 0 or 1?\r\n    if (x.s < 0 || !xd || !xd[0] || !x.e && xd[0] == 1 && xd.length == 1) {\r\n      return new Ctor(xd && !xd[0] ? -1 / 0 : x.s != 1 ? NaN : xd ? 0 : x);\r\n    }\r\n\r\n    if (sd == null) {\r\n      external = false;\r\n      wpr = pr;\r\n    } else {\r\n      wpr = sd;\r\n    }\r\n\r\n    Ctor.precision = wpr += guard;\r\n    c = digitsToString(xd);\r\n    c0 = c.charAt(0);\r\n\r\n    if (Math.abs(e = x.e) < 1.5e15) {\r\n\r\n      // Argument reduction.\r\n      // The series converges faster the closer the argument is to 1, so using\r\n      // ln(a^b) = b * ln(a),   ln(a) = ln(a^b) / b\r\n      // multiply the argument by itself until the leading digits of the significand are 7, 8, 9,\r\n      // 10, 11, 12 or 13, recording the number of multiplications so the sum of the series can\r\n      // later be divided by this number, then separate out the power of 10 using\r\n      // ln(a*10^b) = ln(a) + b*ln(10).\r\n\r\n      // max n is 21 (gives 0.9, 1.0 or 1.1) (9e15 / 21 = 4.2e14).\r\n      //while (c0 < 9 && c0 != 1 || c0 == 1 && c.charAt(1) > 1) {\r\n      // max n is 6 (gives 0.7 - 1.3)\r\n      while (c0 < 7 && c0 != 1 || c0 == 1 && c.charAt(1) > 3) {\r\n        x = x.times(y);\r\n        c = digitsToString(x.d);\r\n        c0 = c.charAt(0);\r\n        n++;\r\n      }\r\n\r\n      e = x.e;\r\n\r\n      if (c0 > 1) {\r\n        x = new Ctor('0.' + c);\r\n        e++;\r\n      } else {\r\n        x = new Ctor(c0 + '.' + c.slice(1));\r\n      }\r\n    } else {\r\n\r\n      // The argument reduction method above may result in overflow if the argument y is a massive\r\n      // number with exponent >= 1500000000000000 (9e15 / 6 = 1.5e15), so instead recall this\r\n      // function using ln(x*10^e) = ln(x) + e*ln(10).\r\n      t = getLn10(Ctor, wpr + 2, pr).times(e + '');\r\n      x = naturalLogarithm(new Ctor(c0 + '.' + c.slice(1)), wpr - guard).plus(t);\r\n      Ctor.precision = pr;\r\n\r\n      return sd == null ? finalise(x, pr, rm, external = true) : x;\r\n    }\r\n\r\n    // x1 is x reduced to a value near 1.\r\n    x1 = x;\r\n\r\n    // Taylor series.\r\n    // ln(y) = ln((1 + x)/(1 - x)) = 2(x + x^3/3 + x^5/5 + x^7/7 + ...)\r\n    // where x = (y - 1)/(y + 1)    (|x| < 1)\r\n    sum = numerator = x = divide(x.minus(1), x.plus(1), wpr, 1);\r\n    x2 = finalise(x.times(x), wpr, 1);\r\n    denominator = 3;\r\n\r\n    for (;;) {\r\n      numerator = finalise(numerator.times(x2), wpr, 1);\r\n      t = sum.plus(divide(numerator, new Ctor(denominator), wpr, 1));\r\n\r\n      if (digitsToString(t.d).slice(0, wpr) === digitsToString(sum.d).slice(0, wpr)) {\r\n        sum = sum.times(2);\r\n\r\n        // Reverse the argument reduction. Check that e is not 0 because, besides preventing an\r\n        // unnecessary calculation, -0 + 0 = +0 and to ensure correct rounding -0 needs to stay -0.\r\n        if (e !== 0) sum = sum.plus(getLn10(Ctor, wpr + 2, pr).times(e + ''));\r\n        sum = divide(sum, new Ctor(n), wpr, 1);\r\n\r\n        // Is rm > 3 and the first 4 rounding digits 4999, or rm < 4 (or the summation has\r\n        // been repeated previously) and the first 4 rounding digits 9999?\r\n        // If so, restart the summation with a higher precision, otherwise\r\n        // e.g. with precision: 12, rounding: 1\r\n        // ln(135520028.6126091714265381533) = 18.7246299999 when it should be 18.72463.\r\n        // `wpr - guard` is the index of first rounding digit.\r\n        if (sd == null) {\r\n          if (checkRoundingDigits(sum.d, wpr - guard, rm, rep)) {\r\n            Ctor.precision = wpr += guard;\r\n            t = numerator = x = divide(x1.minus(1), x1.plus(1), wpr, 1);\r\n            x2 = finalise(x.times(x), wpr, 1);\r\n            denominator = rep = 1;\r\n          } else {\r\n            return finalise(sum, Ctor.precision = pr, rm, external = true);\r\n          }\r\n        } else {\r\n          Ctor.precision = pr;\r\n          return sum;\r\n        }\r\n      }\r\n\r\n      sum = t;\r\n      denominator += 2;\r\n    }\r\n  }\r\n\r\n\r\n  // ±Infinity, NaN.\r\n  function nonFiniteToString(x) {\r\n    // Unsigned.\r\n    return String(x.s * x.s / 0);\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from string `str`.\r\n   */\r\n  function parseDecimal(x, str) {\r\n    var e, i, len;\r\n\r\n    // Decimal point?\r\n    if ((e = str.indexOf('.')) > -1) str = str.replace('.', '');\r\n\r\n    // Exponential form?\r\n    if ((i = str.search(/e/i)) > 0) {\r\n\r\n      // Determine exponent.\r\n      if (e < 0) e = i;\r\n      e += +str.slice(i + 1);\r\n      str = str.substring(0, i);\r\n    } else if (e < 0) {\r\n\r\n      // Integer.\r\n      e = str.length;\r\n    }\r\n\r\n    // Determine leading zeros.\r\n    for (i = 0; str.charCodeAt(i) === 48; i++);\r\n\r\n    // Determine trailing zeros.\r\n    for (len = str.length; str.charCodeAt(len - 1) === 48; --len);\r\n    str = str.slice(i, len);\r\n\r\n    if (str) {\r\n      len -= i;\r\n      x.e = e = e - i - 1;\r\n      x.d = [];\r\n\r\n      // Transform base\r\n\r\n      // e is the base 10 exponent.\r\n      // i is where to slice str to get the first word of the digits array.\r\n      i = (e + 1) % LOG_BASE;\r\n      if (e < 0) i += LOG_BASE;\r\n\r\n      if (i < len) {\r\n        if (i) x.d.push(+str.slice(0, i));\r\n        for (len -= LOG_BASE; i < len;) x.d.push(+str.slice(i, i += LOG_BASE));\r\n        str = str.slice(i);\r\n        i = LOG_BASE - str.length;\r\n      } else {\r\n        i -= len;\r\n      }\r\n\r\n      for (; i--;) str += '0';\r\n      x.d.push(+str);\r\n\r\n      if (external) {\r\n\r\n        // Overflow?\r\n        if (x.e > x.constructor.maxE) {\r\n\r\n          // Infinity.\r\n          x.d = null;\r\n          x.e = NaN;\r\n\r\n        // Underflow?\r\n        } else if (x.e < x.constructor.minE) {\r\n\r\n          // Zero.\r\n          x.e = 0;\r\n          x.d = [0];\r\n          // x.constructor.underflow = true;\r\n        } // else x.constructor.underflow = false;\r\n      }\r\n    } else {\r\n\r\n      // Zero.\r\n      x.e = 0;\r\n      x.d = [0];\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * Parse the value of a new Decimal `x` from a string `str`, which is not a decimal value.\r\n   */\r\n  function parseOther(x, str) {\r\n    var base, Ctor, divisor, i, isFloat, len, p, xd, xe;\r\n\r\n    if (str.indexOf('_') > -1) {\r\n      str = str.replace(/(\\d)_(?=\\d)/g, '$1');\r\n      if (isDecimal.test(str)) return parseDecimal(x, str);\r\n    } else if (str === 'Infinity' || str === 'NaN') {\r\n      if (!+str) x.s = NaN;\r\n      x.e = NaN;\r\n      x.d = null;\r\n      return x;\r\n    }\r\n\r\n    if (isHex.test(str))  {\r\n      base = 16;\r\n      str = str.toLowerCase();\r\n    } else if (isBinary.test(str))  {\r\n      base = 2;\r\n    } else if (isOctal.test(str))  {\r\n      base = 8;\r\n    } else {\r\n      throw Error(invalidArgument + str);\r\n    }\r\n\r\n    // Is there a binary exponent part?\r\n    i = str.search(/p/i);\r\n\r\n    if (i > 0) {\r\n      p = +str.slice(i + 1);\r\n      str = str.substring(2, i);\r\n    } else {\r\n      str = str.slice(2);\r\n    }\r\n\r\n    // Convert `str` as an integer then divide the result by `base` raised to a power such that the\r\n    // fraction part will be restored.\r\n    i = str.indexOf('.');\r\n    isFloat = i >= 0;\r\n    Ctor = x.constructor;\r\n\r\n    if (isFloat) {\r\n      str = str.replace('.', '');\r\n      len = str.length;\r\n      i = len - i;\r\n\r\n      // log[10](16) = 1.2041... , log[10](88) = 1.9444....\r\n      divisor = intPow(Ctor, new Ctor(base), i, i * 2);\r\n    }\r\n\r\n    xd = convertBase(str, base, BASE);\r\n    xe = xd.length - 1;\r\n\r\n    // Remove trailing zeros.\r\n    for (i = xe; xd[i] === 0; --i) xd.pop();\r\n    if (i < 0) return new Ctor(x.s * 0);\r\n    x.e = getBase10Exponent(xd, xe);\r\n    x.d = xd;\r\n    external = false;\r\n\r\n    // At what precision to perform the division to ensure exact conversion?\r\n    // maxDecimalIntegerPartDigitCount = ceil(log[10](b) * otherBaseIntegerPartDigitCount)\r\n    // log[10](2) = 0.30103, log[10](8) = 0.90309, log[10](16) = 1.20412\r\n    // E.g. ceil(1.2 * 3) = 4, so up to 4 decimal digits are needed to represent 3 hex int digits.\r\n    // maxDecimalFractionPartDigitCount = {Hex:4|Oct:3|Bin:1} * otherBaseFractionPartDigitCount\r\n    // Therefore using 4 * the number of digits of str will always be enough.\r\n    if (isFloat) x = divide(x, divisor, len * 4);\r\n\r\n    // Multiply by the binary exponent part if present.\r\n    if (p) x = x.times(Math.abs(p) < 54 ? mathpow(2, p) : Decimal.pow(2, p));\r\n    external = true;\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  /*\r\n   * sin(x) = x - x^3/3! + x^5/5! - ...\r\n   * |x| < pi/2\r\n   *\r\n   */\r\n  function sine(Ctor, x) {\r\n    var k,\r\n      len = x.d.length;\r\n\r\n    if (len < 3) {\r\n      return x.isZero() ? x : taylorSeries(Ctor, 2, x, x);\r\n    }\r\n\r\n    // Argument reduction: sin(5x) = 16*sin^5(x) - 20*sin^3(x) + 5*sin(x)\r\n    // i.e. sin(x) = 16*sin^5(x/5) - 20*sin^3(x/5) + 5*sin(x/5)\r\n    // and  sin(x) = sin(x/5)(5 + sin^2(x/5)(16sin^2(x/5) - 20))\r\n\r\n    // Estimate the optimum number of times to use the argument reduction.\r\n    k = 1.4 * Math.sqrt(len);\r\n    k = k > 16 ? 16 : k | 0;\r\n\r\n    x = x.times(1 / tinyPow(5, k));\r\n    x = taylorSeries(Ctor, 2, x, x);\r\n\r\n    // Reverse argument reduction\r\n    var sin2_x,\r\n      d5 = new Ctor(5),\r\n      d16 = new Ctor(16),\r\n      d20 = new Ctor(20);\r\n    for (; k--;) {\r\n      sin2_x = x.times(x);\r\n      x = x.times(d5.plus(sin2_x.times(d16.times(sin2_x).minus(d20))));\r\n    }\r\n\r\n    return x;\r\n  }\r\n\r\n\r\n  // Calculate Taylor series for `cos`, `cosh`, `sin` and `sinh`.\r\n  function taylorSeries(Ctor, n, x, y, isHyperbolic) {\r\n    var j, t, u, x2,\r\n      i = 1,\r\n      pr = Ctor.precision,\r\n      k = Math.ceil(pr / LOG_BASE);\r\n\r\n    external = false;\r\n    x2 = x.times(x);\r\n    u = new Ctor(y);\r\n\r\n    for (;;) {\r\n      t = divide(u.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      u = isHyperbolic ? y.plus(t) : y.minus(t);\r\n      y = divide(t.times(x2), new Ctor(n++ * n++), pr, 1);\r\n      t = u.plus(y);\r\n\r\n      if (t.d[k] !== void 0) {\r\n        for (j = k; t.d[j] === u.d[j] && j--;);\r\n        if (j == -1) break;\r\n      }\r\n\r\n      j = u;\r\n      u = y;\r\n      y = t;\r\n      t = j;\r\n      i++;\r\n    }\r\n\r\n    external = true;\r\n    t.d.length = k + 1;\r\n\r\n    return t;\r\n  }\r\n\r\n\r\n  // Exponent e must be positive and non-zero.\r\n  function tinyPow(b, e) {\r\n    var n = b;\r\n    while (--e) n *= b;\r\n    return n;\r\n  }\r\n\r\n\r\n  // Return the absolute value of `x` reduced to less than or equal to half pi.\r\n  function toLessThanHalfPi(Ctor, x) {\r\n    var t,\r\n      isNeg = x.s < 0,\r\n      pi = getPi(Ctor, Ctor.precision, 1),\r\n      halfPi = pi.times(0.5);\r\n\r\n    x = x.abs();\r\n\r\n    if (x.lte(halfPi)) {\r\n      quadrant = isNeg ? 4 : 1;\r\n      return x;\r\n    }\r\n\r\n    t = x.divToInt(pi);\r\n\r\n    if (t.isZero()) {\r\n      quadrant = isNeg ? 3 : 2;\r\n    } else {\r\n      x = x.minus(t.times(pi));\r\n\r\n      // 0 <= x < pi\r\n      if (x.lte(halfPi)) {\r\n        quadrant = isOdd(t) ? (isNeg ? 2 : 3) : (isNeg ? 4 : 1);\r\n        return x;\r\n      }\r\n\r\n      quadrant = isOdd(t) ? (isNeg ? 1 : 4) : (isNeg ? 3 : 2);\r\n    }\r\n\r\n    return x.minus(pi).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return the value of Decimal `x` as a string in base `baseOut`.\r\n   *\r\n   * If the optional `sd` argument is present include a binary exponent suffix.\r\n   */\r\n  function toStringBinary(x, baseOut, sd, rm) {\r\n    var base, e, i, k, len, roundUp, str, xd, y,\r\n      Ctor = x.constructor,\r\n      isExp = sd !== void 0;\r\n\r\n    if (isExp) {\r\n      checkInt32(sd, 1, MAX_DIGITS);\r\n      if (rm === void 0) rm = Ctor.rounding;\r\n      else checkInt32(rm, 0, 8);\r\n    } else {\r\n      sd = Ctor.precision;\r\n      rm = Ctor.rounding;\r\n    }\r\n\r\n    if (!x.isFinite()) {\r\n      str = nonFiniteToString(x);\r\n    } else {\r\n      str = finiteToString(x);\r\n      i = str.indexOf('.');\r\n\r\n      // Use exponential notation according to `toExpPos` and `toExpNeg`? No, but if required:\r\n      // maxBinaryExponent = floor((decimalExponent + 1) * log[2](10))\r\n      // minBinaryExponent = floor(decimalExponent * log[2](10))\r\n      // log[2](10) = 3.321928094887362347870319429489390175864\r\n\r\n      if (isExp) {\r\n        base = 2;\r\n        if (baseOut == 16) {\r\n          sd = sd * 4 - 3;\r\n        } else if (baseOut == 8) {\r\n          sd = sd * 3 - 2;\r\n        }\r\n      } else {\r\n        base = baseOut;\r\n      }\r\n\r\n      // Convert the number as an integer then divide the result by its base raised to a power such\r\n      // that the fraction part will be restored.\r\n\r\n      // Non-integer.\r\n      if (i >= 0) {\r\n        str = str.replace('.', '');\r\n        y = new Ctor(1);\r\n        y.e = str.length - i;\r\n        y.d = convertBase(finiteToString(y), 10, base);\r\n        y.e = y.d.length;\r\n      }\r\n\r\n      xd = convertBase(str, 10, base);\r\n      e = len = xd.length;\r\n\r\n      // Remove trailing zeros.\r\n      for (; xd[--len] == 0;) xd.pop();\r\n\r\n      if (!xd[0]) {\r\n        str = isExp ? '0p+0' : '0';\r\n      } else {\r\n        if (i < 0) {\r\n          e--;\r\n        } else {\r\n          x = new Ctor(x);\r\n          x.d = xd;\r\n          x.e = e;\r\n          x = divide(x, y, sd, rm, 0, base);\r\n          xd = x.d;\r\n          e = x.e;\r\n          roundUp = inexact;\r\n        }\r\n\r\n        // The rounding digit, i.e. the digit after the digit that may be rounded up.\r\n        i = xd[sd];\r\n        k = base / 2;\r\n        roundUp = roundUp || xd[sd + 1] !== void 0;\r\n\r\n        roundUp = rm < 4\r\n          ? (i !== void 0 || roundUp) && (rm === 0 || rm === (x.s < 0 ? 3 : 2))\r\n          : i > k || i === k && (rm === 4 || roundUp || rm === 6 && xd[sd - 1] & 1 ||\r\n            rm === (x.s < 0 ? 8 : 7));\r\n\r\n        xd.length = sd;\r\n\r\n        if (roundUp) {\r\n\r\n          // Rounding up may mean the previous digit has to be rounded up and so on.\r\n          for (; ++xd[--sd] > base - 1;) {\r\n            xd[sd] = 0;\r\n            if (!sd) {\r\n              ++e;\r\n              xd.unshift(1);\r\n            }\r\n          }\r\n        }\r\n\r\n        // Determine trailing zeros.\r\n        for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n        // E.g. [4, 11, 15] becomes 4bf.\r\n        for (i = 0, str = ''; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n\r\n        // Add binary exponent suffix?\r\n        if (isExp) {\r\n          if (len > 1) {\r\n            if (baseOut == 16 || baseOut == 8) {\r\n              i = baseOut == 16 ? 4 : 3;\r\n              for (--len; len % i; len++) str += '0';\r\n              xd = convertBase(str, base, baseOut);\r\n              for (len = xd.length; !xd[len - 1]; --len);\r\n\r\n              // xd[0] will always be be 1\r\n              for (i = 1, str = '1.'; i < len; i++) str += NUMERALS.charAt(xd[i]);\r\n            } else {\r\n              str = str.charAt(0) + '.' + str.slice(1);\r\n            }\r\n          }\r\n\r\n          str =  str + (e < 0 ? 'p' : 'p+') + e;\r\n        } else if (e < 0) {\r\n          for (; ++e;) str = '0' + str;\r\n          str = '0.' + str;\r\n        } else {\r\n          if (++e > len) for (e -= len; e-- ;) str += '0';\r\n          else if (e < len) str = str.slice(0, e) + '.' + str.slice(e);\r\n        }\r\n      }\r\n\r\n      str = (baseOut == 16 ? '0x' : baseOut == 2 ? '0b' : baseOut == 8 ? '0o' : '') + str;\r\n    }\r\n\r\n    return x.s < 0 ? '-' + str : str;\r\n  }\r\n\r\n\r\n  // Does not strip trailing zeros.\r\n  function truncate(arr, len) {\r\n    if (arr.length > len) {\r\n      arr.length = len;\r\n      return true;\r\n    }\r\n  }\r\n\r\n\r\n  // Decimal methods\r\n\r\n\r\n  /*\r\n   *  abs\r\n   *  acos\r\n   *  acosh\r\n   *  add\r\n   *  asin\r\n   *  asinh\r\n   *  atan\r\n   *  atanh\r\n   *  atan2\r\n   *  cbrt\r\n   *  ceil\r\n   *  clamp\r\n   *  clone\r\n   *  config\r\n   *  cos\r\n   *  cosh\r\n   *  div\r\n   *  exp\r\n   *  floor\r\n   *  hypot\r\n   *  ln\r\n   *  log\r\n   *  log2\r\n   *  log10\r\n   *  max\r\n   *  min\r\n   *  mod\r\n   *  mul\r\n   *  pow\r\n   *  random\r\n   *  round\r\n   *  set\r\n   *  sign\r\n   *  sin\r\n   *  sinh\r\n   *  sqrt\r\n   *  sub\r\n   *  sum\r\n   *  tan\r\n   *  tanh\r\n   *  trunc\r\n   */\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the absolute value of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function abs(x) {\r\n    return new this(x).abs();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arccosine in radians of `x`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function acos(x) {\r\n    return new this(x).acos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic cosine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function acosh(x) {\r\n    return new this(x).acosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of `x` and `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function add(x, y) {\r\n    return new this(x).plus(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arcsine in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function asin(x) {\r\n    return new this(x).asin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic sine of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function asinh(x) {\r\n    return new this(x).asinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function atan(x) {\r\n    return new this(x).atan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the inverse of the hyperbolic tangent of `x`, rounded to\r\n   * `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function atanh(x) {\r\n    return new this(x).atanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the arctangent in radians of `y/x` in the range -pi to pi\r\n   * (inclusive), rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * Domain: [-Infinity, Infinity]\r\n   * Range: [-pi, pi]\r\n   *\r\n   * y {number|string|Decimal} The y-coordinate.\r\n   * x {number|string|Decimal} The x-coordinate.\r\n   *\r\n   * atan2(±0, -0)               = ±pi\r\n   * atan2(±0, +0)               = ±0\r\n   * atan2(±0, -x)               = ±pi for x > 0\r\n   * atan2(±0, x)                = ±0 for x > 0\r\n   * atan2(-y, ±0)               = -pi/2 for y > 0\r\n   * atan2(y, ±0)                = pi/2 for y > 0\r\n   * atan2(±y, -Infinity)        = ±pi for finite y > 0\r\n   * atan2(±y, +Infinity)        = ±0 for finite y > 0\r\n   * atan2(±Infinity, x)         = ±pi/2 for finite x\r\n   * atan2(±Infinity, -Infinity) = ±3*pi/4\r\n   * atan2(±Infinity, +Infinity) = ±pi/4\r\n   * atan2(NaN, x) = NaN\r\n   * atan2(y, NaN) = NaN\r\n   *\r\n   */\r\n  function atan2(y, x) {\r\n    y = new this(y);\r\n    x = new this(x);\r\n    var r,\r\n      pr = this.precision,\r\n      rm = this.rounding,\r\n      wpr = pr + 4;\r\n\r\n    // Either NaN\r\n    if (!y.s || !x.s) {\r\n      r = new this(NaN);\r\n\r\n    // Both ±Infinity\r\n    } else if (!y.d && !x.d) {\r\n      r = getPi(this, wpr, 1).times(x.s > 0 ? 0.25 : 0.75);\r\n      r.s = y.s;\r\n\r\n    // x is ±Infinity or y is ±0\r\n    } else if (!x.d || y.isZero()) {\r\n      r = x.s < 0 ? getPi(this, pr, rm) : new this(0);\r\n      r.s = y.s;\r\n\r\n    // y is ±Infinity or x is ±0\r\n    } else if (!y.d || x.isZero()) {\r\n      r = getPi(this, wpr, 1).times(0.5);\r\n      r.s = y.s;\r\n\r\n    // Both non-zero and finite\r\n    } else if (x.s < 0) {\r\n      this.precision = wpr;\r\n      this.rounding = 1;\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n      x = getPi(this, wpr, 1);\r\n      this.precision = pr;\r\n      this.rounding = rm;\r\n      r = y.s < 0 ? r.minus(x) : r.plus(x);\r\n    } else {\r\n      r = this.atan(divide(y, x, wpr, 1));\r\n    }\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cube root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function cbrt(x) {\r\n    return new this(x).cbrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using `ROUND_CEIL`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ceil(x) {\r\n    return finalise(x = new this(x), x.e + 1, 2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` clamped to the range delineated by `min` and `max`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * min {number|string|Decimal}\r\n   * max {number|string|Decimal}\r\n   *\r\n   */\r\n  function clamp(x, min, max) {\r\n    return new this(x).clamp(min, max);\r\n  }\r\n\r\n\r\n  /*\r\n   * Configure global settings for a Decimal constructor.\r\n   *\r\n   * `obj` is an object with one or more of the following properties,\r\n   *\r\n   *   precision  {number}\r\n   *   rounding   {number}\r\n   *   toExpNeg   {number}\r\n   *   toExpPos   {number}\r\n   *   maxE       {number}\r\n   *   minE       {number}\r\n   *   modulo     {number}\r\n   *   crypto     {boolean|number}\r\n   *   defaults   {true}\r\n   *\r\n   * E.g. Decimal.config({ precision: 20, rounding: 4 })\r\n   *\r\n   */\r\n  function config(obj) {\r\n    if (!obj || typeof obj !== 'object') throw Error(decimalError + 'Object expected');\r\n    var i, p, v,\r\n      useDefaults = obj.defaults === true,\r\n      ps = [\r\n        'precision', 1, MAX_DIGITS,\r\n        'rounding', 0, 8,\r\n        'toExpNeg', -EXP_LIMIT, 0,\r\n        'toExpPos', 0, EXP_LIMIT,\r\n        'maxE', 0, EXP_LIMIT,\r\n        'minE', -EXP_LIMIT, 0,\r\n        'modulo', 0, 9\r\n      ];\r\n\r\n    for (i = 0; i < ps.length; i += 3) {\r\n      if (p = ps[i], useDefaults) this[p] = DEFAULTS[p];\r\n      if ((v = obj[p]) !== void 0) {\r\n        if (mathfloor(v) === v && v >= ps[i + 1] && v <= ps[i + 2]) this[p] = v;\r\n        else throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    if (p = 'crypto', useDefaults) this[p] = DEFAULTS[p];\r\n    if ((v = obj[p]) !== void 0) {\r\n      if (v === true || v === false || v === 0 || v === 1) {\r\n        if (v) {\r\n          if (typeof crypto != 'undefined' && crypto &&\r\n            (crypto.getRandomValues || crypto.randomBytes)) {\r\n            this[p] = true;\r\n          } else {\r\n            throw Error(cryptoUnavailable);\r\n          }\r\n        } else {\r\n          this[p] = false;\r\n        }\r\n      } else {\r\n        throw Error(invalidArgument + p + ': ' + v);\r\n      }\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the cosine of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cos(x) {\r\n    return new this(x).cos();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic cosine of `x`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function cosh(x) {\r\n    return new this(x).cosh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Create and return a Decimal constructor with the same configuration properties as this Decimal\r\n   * constructor.\r\n   *\r\n   */\r\n  function clone(obj) {\r\n    var i, p, ps;\r\n\r\n    /*\r\n     * The Decimal constructor and exported function.\r\n     * Return a new Decimal instance.\r\n     *\r\n     * v {number|string|Decimal} A numeric value.\r\n     *\r\n     */\r\n    function Decimal(v) {\r\n      var e, i, t,\r\n        x = this;\r\n\r\n      // Decimal called without new.\r\n      if (!(x instanceof Decimal)) return new Decimal(v);\r\n\r\n      // Retain a reference to this Decimal constructor, and shadow Decimal.prototype.constructor\r\n      // which points to Object.\r\n      x.constructor = Decimal;\r\n\r\n      // Duplicate.\r\n      if (isDecimalInstance(v)) {\r\n        x.s = v.s;\r\n\r\n        if (external) {\r\n          if (!v.d || v.e > Decimal.maxE) {\r\n\r\n            // Infinity.\r\n            x.e = NaN;\r\n            x.d = null;\r\n          } else if (v.e < Decimal.minE) {\r\n\r\n            // Zero.\r\n            x.e = 0;\r\n            x.d = [0];\r\n          } else {\r\n            x.e = v.e;\r\n            x.d = v.d.slice();\r\n          }\r\n        } else {\r\n          x.e = v.e;\r\n          x.d = v.d ? v.d.slice() : v.d;\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      t = typeof v;\r\n\r\n      if (t === 'number') {\r\n        if (v === 0) {\r\n          x.s = 1 / v < 0 ? -1 : 1;\r\n          x.e = 0;\r\n          x.d = [0];\r\n          return;\r\n        }\r\n\r\n        if (v < 0) {\r\n          v = -v;\r\n          x.s = -1;\r\n        } else {\r\n          x.s = 1;\r\n        }\r\n\r\n        // Fast path for small integers.\r\n        if (v === ~~v && v < 1e7) {\r\n          for (e = 0, i = v; i >= 10; i /= 10) e++;\r\n\r\n          if (external) {\r\n            if (e > Decimal.maxE) {\r\n              x.e = NaN;\r\n              x.d = null;\r\n            } else if (e < Decimal.minE) {\r\n              x.e = 0;\r\n              x.d = [0];\r\n            } else {\r\n              x.e = e;\r\n              x.d = [v];\r\n            }\r\n          } else {\r\n            x.e = e;\r\n            x.d = [v];\r\n          }\r\n\r\n          return;\r\n\r\n        // Infinity, NaN.\r\n        } else if (v * 0 !== 0) {\r\n          if (!v) x.s = NaN;\r\n          x.e = NaN;\r\n          x.d = null;\r\n          return;\r\n        }\r\n\r\n        return parseDecimal(x, v.toString());\r\n\r\n      } else if (t !== 'string') {\r\n        throw Error(invalidArgument + v);\r\n      }\r\n\r\n      // Minus sign?\r\n      if ((i = v.charCodeAt(0)) === 45) {\r\n        v = v.slice(1);\r\n        x.s = -1;\r\n      } else {\r\n        // Plus sign?\r\n        if (i === 43) v = v.slice(1);\r\n        x.s = 1;\r\n      }\r\n\r\n      return isDecimal.test(v) ? parseDecimal(x, v) : parseOther(x, v);\r\n    }\r\n\r\n    Decimal.prototype = P;\r\n\r\n    Decimal.ROUND_UP = 0;\r\n    Decimal.ROUND_DOWN = 1;\r\n    Decimal.ROUND_CEIL = 2;\r\n    Decimal.ROUND_FLOOR = 3;\r\n    Decimal.ROUND_HALF_UP = 4;\r\n    Decimal.ROUND_HALF_DOWN = 5;\r\n    Decimal.ROUND_HALF_EVEN = 6;\r\n    Decimal.ROUND_HALF_CEIL = 7;\r\n    Decimal.ROUND_HALF_FLOOR = 8;\r\n    Decimal.EUCLID = 9;\r\n\r\n    Decimal.config = Decimal.set = config;\r\n    Decimal.clone = clone;\r\n    Decimal.isDecimal = isDecimalInstance;\r\n\r\n    Decimal.abs = abs;\r\n    Decimal.acos = acos;\r\n    Decimal.acosh = acosh;        // ES6\r\n    Decimal.add = add;\r\n    Decimal.asin = asin;\r\n    Decimal.asinh = asinh;        // ES6\r\n    Decimal.atan = atan;\r\n    Decimal.atanh = atanh;        // ES6\r\n    Decimal.atan2 = atan2;\r\n    Decimal.cbrt = cbrt;          // ES6\r\n    Decimal.ceil = ceil;\r\n    Decimal.clamp = clamp;\r\n    Decimal.cos = cos;\r\n    Decimal.cosh = cosh;          // ES6\r\n    Decimal.div = div;\r\n    Decimal.exp = exp;\r\n    Decimal.floor = floor;\r\n    Decimal.hypot = hypot;        // ES6\r\n    Decimal.ln = ln;\r\n    Decimal.log = log;\r\n    Decimal.log10 = log10;        // ES6\r\n    Decimal.log2 = log2;          // ES6\r\n    Decimal.max = max;\r\n    Decimal.min = min;\r\n    Decimal.mod = mod;\r\n    Decimal.mul = mul;\r\n    Decimal.pow = pow;\r\n    Decimal.random = random;\r\n    Decimal.round = round;\r\n    Decimal.sign = sign;          // ES6\r\n    Decimal.sin = sin;\r\n    Decimal.sinh = sinh;          // ES6\r\n    Decimal.sqrt = sqrt;\r\n    Decimal.sub = sub;\r\n    Decimal.sum = sum;\r\n    Decimal.tan = tan;\r\n    Decimal.tanh = tanh;          // ES6\r\n    Decimal.trunc = trunc;        // ES6\r\n\r\n    if (obj === void 0) obj = {};\r\n    if (obj) {\r\n      if (obj.defaults !== true) {\r\n        ps = ['precision', 'rounding', 'toExpNeg', 'toExpPos', 'maxE', 'minE', 'modulo', 'crypto'];\r\n        for (i = 0; i < ps.length;) if (!obj.hasOwnProperty(p = ps[i++])) obj[p] = this[p];\r\n      }\r\n    }\r\n\r\n    Decimal.config(obj);\r\n\r\n    return Decimal;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` divided by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function div(x, y) {\r\n    return new this(x).div(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural exponential of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The power to which to raise the base of the natural log.\r\n   *\r\n   */\r\n  function exp(x) {\r\n    return new this(x).exp();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` round to an integer using `ROUND_FLOOR`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function floor(x) {\r\n    return finalise(x = new this(x), x.e + 1, 3);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of the sum of the squares of the arguments,\r\n   * rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * hypot(a, b, ...) = sqrt(a^2 + b^2 + ...)\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function hypot() {\r\n    var i, n,\r\n      t = new this(0);\r\n\r\n    external = false;\r\n\r\n    for (i = 0; i < arguments.length;) {\r\n      n = new this(arguments[i++]);\r\n      if (!n.d) {\r\n        if (n.s) {\r\n          external = true;\r\n          return new this(1 / 0);\r\n        }\r\n        t = n;\r\n      } else if (t.d) {\r\n        t = t.plus(n.times(n));\r\n      }\r\n    }\r\n\r\n    external = true;\r\n\r\n    return t.sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return true if object is a Decimal instance (where Decimal is any Decimal constructor),\r\n   * otherwise return false.\r\n   *\r\n   */\r\n  function isDecimalInstance(obj) {\r\n    return obj instanceof Decimal || obj && obj.toStringTag === tag || false;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the natural logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function ln(x) {\r\n    return new this(x).ln();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the log of `x` to the base `y`, or to base 10 if no base\r\n   * is specified, rounded to `precision` significant digits using rounding mode `rounding`.\r\n   *\r\n   * log[y](x)\r\n   *\r\n   * x {number|string|Decimal} The argument of the logarithm.\r\n   * y {number|string|Decimal} The base of the logarithm.\r\n   *\r\n   */\r\n  function log(x, y) {\r\n    return new this(x).log(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 2 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log2(x) {\r\n    return new this(x).log(2);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the base 10 logarithm of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function log10(x) {\r\n    return new this(x).log(10);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the maximum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function max() {\r\n    return maxOrMin(this, arguments, 'lt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the minimum of the arguments.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function min() {\r\n    return maxOrMin(this, arguments, 'gt');\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` modulo `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mod(x, y) {\r\n    return new this(x).mod(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` multiplied by `y`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function mul(x, y) {\r\n    return new this(x).mul(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` raised to the power `y`, rounded to precision\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} The base.\r\n   * y {number|string|Decimal} The exponent.\r\n   *\r\n   */\r\n  function pow(x, y) {\r\n    return new this(x).pow(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Returns a new Decimal with a random value equal to or greater than 0 and less than 1, and with\r\n   * `sd`, or `Decimal.precision` if `sd` is omitted, significant digits (or less if trailing zeros\r\n   * are produced).\r\n   *\r\n   * [sd] {number} Significant digits. Integer, 0 to MAX_DIGITS inclusive.\r\n   *\r\n   */\r\n  function random(sd) {\r\n    var d, e, k, n,\r\n      i = 0,\r\n      r = new this(1),\r\n      rd = [];\r\n\r\n    if (sd === void 0) sd = this.precision;\r\n    else checkInt32(sd, 1, MAX_DIGITS);\r\n\r\n    k = Math.ceil(sd / LOG_BASE);\r\n\r\n    if (!this.crypto) {\r\n      for (; i < k;) rd[i++] = Math.random() * 1e7 | 0;\r\n\r\n    // Browsers supporting crypto.getRandomValues.\r\n    } else if (crypto.getRandomValues) {\r\n      d = crypto.getRandomValues(new Uint32Array(k));\r\n\r\n      for (; i < k;) {\r\n        n = d[i];\r\n\r\n        // 0 <= n < 4294967296\r\n        // Probability n >= 4.29e9, is 4967296 / 4294967296 = 0.00116 (1 in 865).\r\n        if (n >= 4.29e9) {\r\n          d[i] = crypto.getRandomValues(new Uint32Array(1))[0];\r\n        } else {\r\n\r\n          // 0 <= n <= 4289999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd[i++] = n % 1e7;\r\n        }\r\n      }\r\n\r\n    // Node.js supporting crypto.randomBytes.\r\n    } else if (crypto.randomBytes) {\r\n\r\n      // buffer\r\n      d = crypto.randomBytes(k *= 4);\r\n\r\n      for (; i < k;) {\r\n\r\n        // 0 <= n < 2147483648\r\n        n = d[i] + (d[i + 1] << 8) + (d[i + 2] << 16) + ((d[i + 3] & 0x7f) << 24);\r\n\r\n        // Probability n >= 2.14e9, is 7483648 / 2147483648 = 0.0035 (1 in 286).\r\n        if (n >= 2.14e9) {\r\n          crypto.randomBytes(4).copy(d, i);\r\n        } else {\r\n\r\n          // 0 <= n <= 2139999999\r\n          // 0 <= (n % 1e7) <= 9999999\r\n          rd.push(n % 1e7);\r\n          i += 4;\r\n        }\r\n      }\r\n\r\n      i = k / 4;\r\n    } else {\r\n      throw Error(cryptoUnavailable);\r\n    }\r\n\r\n    k = rd[--i];\r\n    sd %= LOG_BASE;\r\n\r\n    // Convert trailing digits to zeros according to sd.\r\n    if (k && sd) {\r\n      n = mathpow(10, LOG_BASE - sd);\r\n      rd[i] = (k / n | 0) * n;\r\n    }\r\n\r\n    // Remove trailing words which are zero.\r\n    for (; rd[i] === 0; i--) rd.pop();\r\n\r\n    // Zero?\r\n    if (i < 0) {\r\n      e = 0;\r\n      rd = [0];\r\n    } else {\r\n      e = -1;\r\n\r\n      // Remove leading words which are zero and adjust exponent accordingly.\r\n      for (; rd[0] === 0; e -= LOG_BASE) rd.shift();\r\n\r\n      // Count the digits of the first word of rd to determine leading zeros.\r\n      for (k = 1, n = rd[0]; n >= 10; n /= 10) k++;\r\n\r\n      // Adjust the exponent for leading zeros of the first word of rd.\r\n      if (k < LOG_BASE) e -= LOG_BASE - k;\r\n    }\r\n\r\n    r.e = e;\r\n    r.d = rd;\r\n\r\n    return r;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` rounded to an integer using rounding mode `rounding`.\r\n   *\r\n   * To emulate `Math.round`, set rounding to 7 (ROUND_HALF_CEIL).\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function round(x) {\r\n    return finalise(x = new this(x), x.e + 1, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return\r\n   *   1    if x > 0,\r\n   *  -1    if x < 0,\r\n   *   0    if x is 0,\r\n   *  -0    if x is -0,\r\n   *   NaN  otherwise\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sign(x) {\r\n    x = new this(x);\r\n    return x.d ? (x.d[0] ? x.s : 0 * x.s) : x.s || NaN;\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sine of `x`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sin(x) {\r\n    return new this(x).sin();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic sine of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function sinh(x) {\r\n    return new this(x).sinh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the square root of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function sqrt(x) {\r\n    return new this(x).sqrt();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` minus `y`, rounded to `precision` significant digits\r\n   * using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal}\r\n   * y {number|string|Decimal}\r\n   *\r\n   */\r\n  function sub(x, y) {\r\n    return new this(x).sub(y);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the sum of the arguments, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * Only the result is rounded, not the intermediate calculations.\r\n   *\r\n   * arguments {number|string|Decimal}\r\n   *\r\n   */\r\n  function sum() {\r\n    var i = 0,\r\n      args = arguments,\r\n      x = new this(args[i]);\r\n\r\n    external = false;\r\n    for (; x.s && ++i < args.length;) x = x.plus(args[i]);\r\n    external = true;\r\n\r\n    return finalise(x, this.precision, this.rounding);\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the tangent of `x`, rounded to `precision` significant\r\n   * digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tan(x) {\r\n    return new this(x).tan();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is the hyperbolic tangent of `x`, rounded to `precision`\r\n   * significant digits using rounding mode `rounding`.\r\n   *\r\n   * x {number|string|Decimal} A value in radians.\r\n   *\r\n   */\r\n  function tanh(x) {\r\n    return new this(x).tanh();\r\n  }\r\n\r\n\r\n  /*\r\n   * Return a new Decimal whose value is `x` truncated to an integer.\r\n   *\r\n   * x {number|string|Decimal}\r\n   *\r\n   */\r\n  function trunc(x) {\r\n    return finalise(x = new this(x), x.e + 1, 1);\r\n  }\r\n\r\n\r\n  // Create and configure initial Decimal constructor.\r\n  Decimal = clone(DEFAULTS);\r\n  Decimal.prototype.constructor = Decimal;\r\n  Decimal['default'] = Decimal.Decimal = Decimal;\r\n\r\n  // Create the internal constants from their string values.\r\n  LN10 = new Decimal(LN10);\r\n  PI = new Decimal(PI);\r\n\r\n\r\n  // Export.\r\n\r\n\r\n  // AMD.\r\n  if (typeof define == 'function' && define.amd) {\r\n    define(function () {\r\n      return Decimal;\r\n    });\r\n\r\n  // Node and other environments that support module.exports.\r\n  } else if (typeof module != 'undefined' && module.exports) {\r\n    if (typeof Symbol == 'function' && typeof Symbol.iterator == 'symbol') {\r\n      P[Symbol['for']('nodejs.util.inspect.custom')] = P.toString;\r\n      P[Symbol.toStringTag] = 'Decimal';\r\n    }\r\n\r\n    module.exports = Decimal;\r\n\r\n  // Browser.\r\n  } else {\r\n    if (!globalScope) {\r\n      globalScope = typeof self != 'undefined' && self && self.self == self ? self : window;\r\n    }\r\n\r\n    noConflict = globalScope.Decimal;\r\n    Decimal.noConflict = function () {\r\n      globalScope.Decimal = noConflict;\r\n      return Decimal;\r\n    };\r\n\r\n    globalScope.Decimal = Decimal;\r\n  }\r\n})(this);\r\n","import Decimal from 'decimal.js'\r\n\r\nexport const generatePaths = currencies => {\r\n  return currencies\r\n    .map(currency => currencies.map(currency2 => currencies.map(currency3 => {\r\n      if (currency !== currency2 && currency !== currency3 && currency2 !== currency3) {\r\n        return ({\r\n          path: [currency, currency2, currency3],\r\n          startingCurrency: currency,\r\n        })\r\n      }\r\n      return null\r\n    })))\r\n    .flat(2)\r\n    .filter(Boolean)\r\n    .reduce((acc, pathObj) => {\r\n      const {path} = pathObj\r\n      const current = acc.map(a => a.path.join())\r\n      if (\r\n        !current.includes(path.join())\r\n        && !current.includes([path[1], path[2], path[0]].join())\r\n        && !current.includes([path[2], path[0], path[1]].join())\r\n      ) {\r\n        acc.push(pathObj)\r\n      }\r\n      return acc\r\n    }, [])\r\n}\r\n\r\nexport const addPairs = pairings => path => ({\r\n  ...path,\r\n  pairs: path.path.map((currency, idx) => {\r\n    const nextCurrency = path.path[path.path[idx + 1] ? idx + 1 : 0]\r\n    if (pairings[currency] && pairings[currency].includes(nextCurrency)) {\r\n      return {\r\n        base: nextCurrency,\r\n        quote: currency,\r\n        get id() {\r\n          return `${this.base}${this.quote}`\r\n        },\r\n        side: 'BUY',\r\n      }\r\n    }\r\n    if (pairings[nextCurrency] && pairings[nextCurrency].includes(currency)) {\r\n      return {\r\n        base: currency,\r\n        quote: nextCurrency,\r\n        get id() {\r\n          return `${this.base}${this.quote}`\r\n        },\r\n        side: 'SELL',\r\n      }\r\n    }\r\n    return null\r\n  }),\r\n})\r\n\r\nexport const pairsMap = (...callbacks) => path => callbacks.reduce((path, callback) => ({\r\n  ...path,\r\n  pairs: path.pairs.map(callback),\r\n}), path)\r\n\r\nexport const addBalanceName = pair => ({\r\n  ...pair,\r\n  toName: pair.side === 'BUY' ? pair.base : pair.quote,\r\n  fromName: pair.side === 'BUY' ? pair.quote : pair.base,\r\n})\r\n\r\nexport const addPrice = prices => pair => ({\r\n  ...pair,\r\n  price: prices[pair.id] || {'BUY': 0, 'SELL': Infinity},\r\n})\r\n\r\nexport const addBalance = feePerTrade => {\r\n  const rawFeePerTrade = new Decimal(feePerTrade || 0).div(1000000)\r\n\r\n  const recursive = (pair, idx, pairs) => {\r\n    const balance = new Decimal(\r\n      idx === 0\r\n        ? 1\r\n        : recursive(pairs[idx - 1], idx - 1, pairs).balance,\r\n    )\r\n\r\n    const calculator = {\r\n      get 'BUY'() {\r\n        const fee = balance.times(rawFeePerTrade)\r\n        const balanceAfterFee = balance.minus(fee)\r\n        return balanceAfterFee.div(pair.price['BUY'])\r\n      },\r\n      get 'SELL'() {\r\n        const balanceAfterSold = balance.times(pair.price['SELL'])\r\n        const fee = balanceAfterSold.times(rawFeePerTrade)\r\n        return balanceAfterSold.minus(fee)\r\n      },\r\n    }\r\n\r\n    return {\r\n      ...pair,\r\n      balance: calculator[pair.side],\r\n    }\r\n  }\r\n\r\n  return recursive\r\n}\r\n\r\nexport const addFinalBalance = path => {\r\n  const startBalance = new Decimal(1)\r\n  const endBalance = path.pairs[path.pairs.length - 1].balance\r\n\r\n  return {\r\n    ...path,\r\n    finalBalance: endBalance.minus(startBalance),\r\n    get percent() {\r\n      return this.finalBalance.div(startBalance.abs()).mul(100)\r\n    },\r\n    get isProfitable() {\r\n      return this.finalBalance > 0\r\n    },\r\n  }\r\n}\r\n","let binanceApi\r\n\r\nconst getMarketData = () => {\r\n  binanceApi = binanceApi || new window.ccxt.binance()\r\n  return binanceApi.loadMarkets()\r\n}\r\n\r\nexport const getPairings = () => {\r\n  return getMarketData()\r\n    .then(marketData => {\r\n      return Object.values(marketData).reduce((acc, market, idx) => {\r\n        if (idx === 0) {\r\n          console.log(market)\r\n        }\r\n\r\n        if (!market.active || !market.spot) {\r\n          return acc\r\n        }\r\n\r\n        if (!acc[market.quote]) {\r\n          acc[market.quote] = [market.base]\r\n        } else {\r\n          acc[market.quote].push(market.base)\r\n        }\r\n        return acc\r\n      }, {})\r\n    })\r\n    .then(pairings => {\r\n      return Object.entries(pairings).reduce((acc, [quote, bases]) => {\r\n        acc[quote] = bases.filter(base => {\r\n          if (acc[base]) {\r\n            return true\r\n          }\r\n          return Object.entries(pairings).some(([quote2, bases2]) => {\r\n            if (quote2 === quote) {\r\n              return false\r\n            }\r\n            return bases2.includes(base);\r\n          })\r\n        })\r\n        return acc\r\n      }, {})\r\n    })\r\n}\r\n","<script lang=\"ts\">\r\n  import {\r\n    addBalance,\r\n    addBalanceName,\r\n    addFinalBalance,\r\n    addPairs,\r\n    addPrice,\r\n    generatePaths,\r\n    pairsMap,\r\n  } from './utils/path-utils'\r\n  import {getPairings} from './utils/exchange'\r\n\r\n  import {onMount} from 'svelte'\r\n\r\n\r\n  let feePerTrade = 1000\r\n  let prices = {}\r\n  let paths = []\r\n  let pairings = {}\r\n  let availableQuoteCurrencies = []\r\n  let availableBaseCurrencies = []\r\n  let selectedCurrencies = []\r\n  let activePairIds = []\r\n\r\n  let ws\r\n\r\n  let wsStatus = 0\r\n\r\n\r\n  const initTicker = () => {\r\n    ws = new WebSocket('wss://stream.binance.com/stream')\r\n    ws.onopen = () => {\r\n      wsStatus = 2\r\n      if (activePairIds.length > 0) {\r\n        ws.send(JSON.stringify({method: 'SUBSCRIBE', params: activePairIds, id: 1}))\r\n      }\r\n    }\r\n    ws.onmessage = stream => {\r\n      const data = JSON.parse(stream.data)\r\n      if (data?.data) {\r\n        const {s, a, b} = data.data\r\n        if (s && a && b) {\r\n          prices[s] = {\r\n            'BUY': a,\r\n            'SELL': b,\r\n          }\r\n        }\r\n      }\r\n      onPriceChange()\r\n    }\r\n    ws.onclose = () => {\r\n      wsStatus = 0\r\n      setTimeout(() => {\r\n        wsStatus = 1\r\n        initTicker()\r\n      }, 1000)\r\n    }\r\n  }\r\n\r\n  onMount(() => {\r\n    getPairings().then(remotePairings => {\r\n      pairings = remotePairings\r\n      const remoteAvailableQuoteCurrencies = []\r\n      const remoteAvailableBaseCurrencies = []\r\n      Object.entries(remotePairings).forEach(([quote, bases]) => {\r\n        remoteAvailableQuoteCurrencies.push(quote)\r\n        remoteAvailableBaseCurrencies.push(...bases)\r\n      })\r\n      availableQuoteCurrencies = [...new Set(remoteAvailableQuoteCurrencies)]\r\n      availableBaseCurrencies = [...new Set(remoteAvailableBaseCurrencies)].filter(base => !Object.keys(remotePairings).includes(base))\r\n    })\r\n\r\n    initTicker()\r\n  })\r\n\r\n  const fillPaths = () => {\r\n    const possiblePaths = generatePaths(selectedCurrencies)\r\n      .map(addPairs(pairings))\r\n      .filter(path => path.pairs.every(Boolean))\r\n\r\n    const pairIds = possiblePaths.flatMap(path => path.pairs.map(pair => `${pair.id.toLowerCase()}@bookTicker`))\r\n\r\n    pairIds.forEach(pairId => {\r\n      if (!activePairIds.includes(pairId)) {\r\n        ws.send(JSON.stringify({method: 'SUBSCRIBE', params: [pairId], id: 1}))\r\n        activePairIds = [...activePairIds, pairId]\r\n      }\r\n    })\r\n\r\n    activePairIds.forEach(activePairId => {\r\n      if (!pairIds.includes(activePairId)) {\r\n        ws.send(JSON.stringify({method: 'UNSUBSCRIBE', params: [activePairId], id: 312}))\r\n        activePairIds = activePairIds.filter(pairId => pairId !== activePairId)\r\n      }\r\n    })\r\n\r\n    paths = possiblePaths\r\n      .map(\r\n        pairsMap(\r\n          addBalanceName,\r\n          addPrice(prices),\r\n          addBalance(feePerTrade),\r\n        ),\r\n      )\r\n      .map(addFinalBalance)\r\n      .sort((a, b) => b.percent - a.percent)\r\n  }\r\n\r\n  const onPriceChange = () => {\r\n    paths =\r\n      paths\r\n        .map(\r\n          pairsMap(\r\n            addPrice(prices),\r\n            addBalance(feePerTrade),\r\n          ),\r\n        )\r\n        .map(addFinalBalance)\r\n        .sort((a, b) => b.percent - a.percent)\r\n  }\r\n\r\n  const onInputChange = () => {\r\n    paths =\r\n      paths\r\n        .map(pairsMap(addBalance(feePerTrade)))\r\n        .map(addFinalBalance)\r\n        .sort((a, b) => b.percent - a.percent)\r\n  }\r\n</script>\r\n\r\n<style>\r\n    table#result tr > td:first-child {\r\n        display: none;\r\n    }\r\n\r\n    div.select {\r\n        display: flex;\r\n        width: 100vw;\r\n        flex-wrap: wrap;\r\n    }\r\n\r\n    div.select > label {\r\n        width: 7.5rem;\r\n    }\r\n\r\n    td.number-cell {\r\n        text-align: right;\r\n        font-weight: bold;\r\n    }\r\n\r\n    div.center-box {\r\n        width: 100vw;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n</style>\r\n\r\n<div class=\"center-box\">\r\n  <h1>\r\n    Binance <span style=\"color: {wsStatus === 0 ? 'red' : wsStatus === 1 ? 'orange' : 'green'}\">▲</span> Triangular arbitrage monitor\r\n  </h1>\r\n</div>\r\n\r\n<div class=\"center-box\">\r\n  <form>\r\n    <table>\r\n      <tr>\r\n        <td>FEES</td>\r\n        <td><input bind:value={feePerTrade} on:keyup={onInputChange} type=\"number\"></td>\r\n      </tr>\r\n    </table>\r\n  </form>\r\n</div>\r\n\r\n<div style=\"height: 4rem;\"></div>\r\n\r\n\r\n<div class=\"select\">\r\n  {#each availableQuoteCurrencies as currency}\r\n    <label>\r\n      <input type=checkbox bind:group={selectedCurrencies} value={currency} on:change={fillPaths}>\r\n      {currency}\r\n    </label>\r\n  {/each}\r\n</div>\r\n\r\n<div style=\"height: 1rem;\"></div>\r\n\r\n<div class=\"select\">\r\n  {#each availableBaseCurrencies as currency}\r\n    <label>\r\n      <input type=checkbox bind:group={selectedCurrencies} value={currency} on:change={fillPaths}>\r\n      {currency}\r\n    </label>\r\n  {/each}\r\n</div>\r\n\r\n<div style=\"height: 4rem;\"></div>\r\n\r\n<div class=\"center-box\">\r\n  <table id=\"result\">\r\n    {#each paths as path (path.path.join())}\r\n      <tr>\r\n        {#each path.path as currency}\r\n          <td>-></td>\r\n          <td>{currency}</td>\r\n        {/each}\r\n        {#each path.pairs as pair}\r\n          <td style=\"width: 25px;\"></td>\r\n          <td class=\"number-cell\">{pair.balance.toFixed(4)}</td>\r\n          <td>{pair.toName}</td>\r\n        {/each}\r\n        <td style=\"width: 25px;\"></td>\r\n        <td style=\"color: {path.isProfitable ? 'green' : 'red'};\"\r\n            class=\"number-cell\">{path.finalBalance.toFixed(4)}</td>\r\n        <td style=\"color: {path.isProfitable ? 'green' : 'red'};\">{path.startingCurrency}</td>\r\n        <td style=\"width: 25px;\"></td>\r\n        <td style=\"color: {path.isProfitable ? 'green' : 'red'};\" class=\"number-cell\">{path.percent.toFixed(4)}</td>\r\n        <td style=\"color: {path.isProfitable ? 'green' : 'red'};\">%</td>\r\n      </tr>\r\n    {/each}\r\n  </table>\r\n</div>\r\n","import App from './App.svelte';\r\nvar app = new App({\r\n    target: document.body\r\n});\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","get_binding_group_value","group","__value","checked","Set","add","delete","Array","from","to_number","set_data","wholeText","set_input_value","input","set_style","key","important","style","setProperty","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","callback","has","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","destroy_block","lookup","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_destroy","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","childNodes","children","l","c","intro","customElement","m","new_on_destroy","map","filter","mount_component","globalScope","Decimal","inexact","noConflict","quadrant","EXP_LIMIT","MAX_DIGITS","NUMERALS","LN10","PI","DEFAULTS","precision","rounding","modulo","toExpNeg","toExpPos","minE","maxE","crypto","external","decimalError","invalidArgument","precisionLimitExceeded","cryptoUnavailable","tag","mathfloor","Math","floor","mathpow","pow","isBinary","isHex","isOctal","isDecimal","BASE","LN10_PRECISION","PI_PRECISION","P","toStringTag","digitsToString","k","ws","indexOfLastWord","str","w","getZeroString","checkInt32","min","max","checkRoundingDigits","rm","repeating","di","r","rd","ceil","convertBase","baseIn","baseOut","j","arrL","arr","strL","indexOf","charAt","reverse","absoluteValue","abs","x","this","constructor","s","finalise","e","clampedTo","clamp","Ctor","NaN","gt","cmp","comparedTo","y","xdL","ydL","xd","yd","xs","ys","cosine","cos","pr","sd","len","isZero","tinyPow","toString","taylorSeries","times","cos2x","minus","plus","toLessThanHalfPi","neg","cubeRoot","cbrt","n","rep","t","t3","t3plusx","isFinite","toExponential","slice","divide","eq","decimalPlaces","dp","dividedBy","div","dividedToIntegerBy","divToInt","equals","greaterThan","greaterThanOrEqualTo","gte","hyperbolicCosine","cosh","one","cosh2_x","d8","hyperbolicSine","sinh","sqrt","sinh2_x","d5","d16","d20","hyperbolicTangent","tanh","inverseCosine","acos","halfPi","isNeg","getPi","asin","inverseHyperbolicCosine","acosh","lte","ln","inverseHyperbolicSine","asinh","inverseHyperbolicTangent","atanh","wpr","xsd","inverseSine","atan","inverseTangent","px","x2","isInteger","isInt","isNaN","isNegative","isPositive","isPos","lessThan","lt","lessThanOrEqualTo","logarithm","log","base","isBase10","denominator","inf","num","arg","naturalLogarithm","getLn10","sub","xe","xLTy","shift","getBase10Exponent","mod","q","naturalExponential","exp","negated","carry","unshift","z","getPrecision","round","sine","sin","sin2_x","squareRoot","tangent","tan","mul","rL","toBinary","toStringBinary","toDecimalPlaces","toDP","finiteToString","toFixed","toFraction","maxD","d0","d1","d2","n0","n1","toHexadecimal","toHex","toNearest","toNumber","toOctal","toPower","yn","intPow","toPrecision","toSignificantDigits","toSD","truncated","trunc","valueOf","toJSON","multiplyInteger","temp","compare","aL","bL","subtract","logBase","more","prod","prodL","qd","rem","remL","rem0","xi","xL","yd0","yL","yz","sign","isTruncated","digits","roundUp","xdi","out","isExp","nonFiniteToString","zs","truncate","isOdd","maxOrMin","args","ltgt","guard","sum","c0","numerator","x1","String","parseDecimal","replace","search","substring","charCodeAt","parseOther","divisor","isFloat","test","toLowerCase","isHyperbolic","u","pi","atan2","config","obj","v","useDefaults","defaults","ps","getRandomValues","randomBytes","hypot","arguments","isDecimalInstance","log2","log10","random","Uint32Array","copy","clone","prototype","ROUND_UP","ROUND_DOWN","ROUND_CEIL","ROUND_FLOOR","ROUND_HALF_UP","ROUND_HALF_DOWN","ROUND_HALF_EVEN","ROUND_HALF_CEIL","ROUND_HALF_FLOOR","EUCLID","set","hasOwnProperty","module","exports","Symbol","iterator","self","window","addPairs","pairings","path","pairs","currency","idx","nextCurrency","includes","quote","id","side","pairsMap","reduce","addBalanceName","pair","toName","fromName","addPrice","prices","price","BUY","SELL","Infinity","addBalance","feePerTrade","rawFeePerTrade","recursive","balance","calculator","fee","balanceAfterSold","addFinalBalance","startBalance","endBalance","finalBalance","percent","isProfitable","binanceApi","getPairings","ccxt","binance","loadMarkets","marketData","values","acc","market","console","active","spot","entries","bases","some","quote2","bases2","startingCurrency","join","old_blocks","get_key","dynamic","list","destroy","create_each_block","next","get_context","o","old_indexes","new_blocks","new_lookup","deltas","child_ctx","get","will_move","did_move","first","new_block","old_block","new_key","old_key","paths","availableQuoteCurrencies","availableBaseCurrencies","selectedCurrencies","activePairIds","wsStatus","initTicker","WebSocket","onopen","send","JSON","stringify","method","params","onmessage","stream","parse","onPriceChange","onclose","setTimeout","remotePairings","remoteAvailableQuoteCurrencies","remoteAvailableBaseCurrencies","keys","sort","possiblePaths","currencies","currency2","currency3","flat","Boolean","pathObj","current","every","pairIds","flatMap","pairId","activePairId","$destroy","destroy_component","$on","type","index","splice","$set","$$props","$$set","body"],"mappings":"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"}